Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    ARRAY
    AS
    BOOLEAN
    BREAK
    CASE
    CLASS
    COMA
    COMENTARIO_LARGO
    COMENTARIO_UNA_LINEA
    CONST
    CONTINUE
    CORCHDER
    CORCHIZQ
    COUNT
    DEFAULT
    DO
    DOSPUNTOS
    ECHO
    ELSE
    END_SWITCH
    END_WHILE
    EXTENDS
    FALSE
    FIN
    FLOAT
    FOR
    FUNCTION
    GLOBAL
    IF
    INICIO
    INTEGER
    LLAVEDER
    LLAVEIZQ
    MAYORQUE
    MENORQUE
    NEW
    NULL
    OPERACIONSUM
    OPERALOGICO_MAP
    OPERAMAPA
    OPERAPUT
    OPERASIG_ARRAY
    OPERCOMPARACION
    OPERLOGICO_AND
    OPERLOGICO_NOT
    OPERLOGICO_OR
    OPERLOGICO_OREXCLUSIVO
    OPERLOGICO_XOR
    OPERLOG_AND
    PARENDER
    PARENIZQ
    PRINT
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTO
    PUNTOYCOMA
    RETURN
    RSORT
    STATIC
    STRING
    SWITCH
    TRUE
    WHILE

Grammar

Rule 0     S' -> sentencias
Rule 1     sentencias -> valor
Rule 2     sentencias -> operacion
Rule 3     sentencias -> asignacion
Rule 4     sentencias -> asignacion_abreviatura_op
Rule 5     valor -> valorNumerico
Rule 6     valor -> CADENA
Rule 7     valorNumerico -> ENTERO
Rule 8     valorNumerico -> FLOTANTE
Rule 9     valorNumerico -> VARIABLE
Rule 10    valorNumerico -> BOOLEANO
Rule 11    operacion -> valorNumerico
Rule 12    operacion -> valorNumerico operador operacion
Rule 13    operador -> MAS
Rule 14    operador -> MENOS
Rule 15    operador -> MULTIPLICA
Rule 16    operador -> DIVIDE
Rule 17    operador -> MODULO
Rule 18    operador -> EXPONENCIACION
Rule 19    asignacion -> VARIABLE OPERASIGNACION valor
Rule 20    asignacion_abreviado -> MASIGUAL
Rule 21    asignacion_abreviado -> MENOSIGUAL
Rule 22    asignacion_abreviado -> ASTERISCOIGUAL
Rule 23    asignacion_abreviado -> BARRAIGUAL
Rule 24    asignacion_abreviado -> PORCENTAJEIGUAL
Rule 25    asignacion_abreviatura_op -> VARIABLE asignacion_abreviado valorNumerico

Terminals, with rules where they appear

AMPERSAND            : 
ARRAY                : 
AS                   : 
ASTERISCOIGUAL       : 22
BARRAIGUAL           : 23
BOOLEAN              : 
BOOLEANO             : 10
BREAK                : 
CADENA               : 6
CASE                 : 
CLASS                : 
COMA                 : 
COMENTARIO_LARGO     : 
COMENTARIO_UNA_LINEA : 
CONST                : 
CONTINUE             : 
CORCHDER             : 
CORCHIZQ             : 
COUNT                : 
DEFAULT              : 
DIVIDE               : 16
DO                   : 
DOSPUNTOS            : 
ECHO                 : 
ELSE                 : 
END_SWITCH           : 
END_WHILE            : 
ENTERO               : 7
EXPONENCIACION       : 18
EXTENDS              : 
FALSE                : 
FIN                  : 
FLOAT                : 
FLOTANTE             : 8
FOR                  : 
FUNCTION             : 
GLOBAL               : 
IF                   : 
INICIO               : 
INTEGER              : 
LLAVEDER             : 
LLAVEIZQ             : 
MAS                  : 13
MASIGUAL             : 20
MAYORQUE             : 
MENORQUE             : 
MENOS                : 14
MENOSIGUAL           : 21
MODULO               : 17
MULTIPLICA           : 15
NEW                  : 
NULL                 : 
OPERACIONSUM         : 
OPERALOGICO_MAP      : 
OPERAMAPA            : 
OPERAPUT             : 
OPERASIGNACION       : 19
OPERASIG_ARRAY       : 
OPERCOMPARACION      : 
OPERLOGICO_AND       : 
OPERLOGICO_NOT       : 
OPERLOGICO_OR        : 
OPERLOGICO_OREXCLUSIVO : 
OPERLOGICO_XOR       : 
OPERLOG_AND          : 
PARENDER             : 
PARENIZQ             : 
PORCENTAJEIGUAL      : 24
PRINT                : 
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTO                : 
PUNTOYCOMA           : 
RETURN               : 
RSORT                : 
STATIC               : 
STRING               : 
SWITCH               : 
TRUE                 : 
VARIABLE             : 9 19 25
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 3
asignacion_abreviado : 25
asignacion_abreviatura_op : 4
operacion            : 2 12
operador             : 12
sentencias           : 0
valor                : 1 19
valorNumerico        : 5 11 12 25

Parsing method: LALR

state 0

    (0) S' -> . sentencias
    (1) sentencias -> . valor
    (2) sentencias -> . operacion
    (3) sentencias -> . asignacion
    (4) sentencias -> . asignacion_abreviatura_op
    (5) valor -> . valorNumerico
    (6) valor -> . CADENA
    (11) operacion -> . valorNumerico
    (12) operacion -> . valorNumerico operador operacion
    (19) asignacion -> . VARIABLE OPERASIGNACION valor
    (25) asignacion_abreviatura_op -> . VARIABLE asignacion_abreviado valorNumerico
    (7) valorNumerico -> . ENTERO
    (8) valorNumerico -> . FLOTANTE
    (9) valorNumerico -> . VARIABLE
    (10) valorNumerico -> . BOOLEANO

    CADENA          shift and go to state 7
    VARIABLE        shift and go to state 8
    ENTERO          shift and go to state 9
    FLOTANTE        shift and go to state 10
    BOOLEANO        shift and go to state 11

    sentencias                     shift and go to state 1
    valor                          shift and go to state 2
    operacion                      shift and go to state 3
    asignacion                     shift and go to state 4
    asignacion_abreviatura_op      shift and go to state 5
    valorNumerico                  shift and go to state 6

state 1

    (0) S' -> sentencias .



state 2

    (1) sentencias -> valor .

    $end            reduce using rule 1 (sentencias -> valor .)


state 3

    (2) sentencias -> operacion .

    $end            reduce using rule 2 (sentencias -> operacion .)


state 4

    (3) sentencias -> asignacion .

    $end            reduce using rule 3 (sentencias -> asignacion .)


state 5

    (4) sentencias -> asignacion_abreviatura_op .

    $end            reduce using rule 4 (sentencias -> asignacion_abreviatura_op .)


state 6

    (5) valor -> valorNumerico .
    (11) operacion -> valorNumerico .
    (12) operacion -> valorNumerico . operador operacion
    (13) operador -> . MAS
    (14) operador -> . MENOS
    (15) operador -> . MULTIPLICA
    (16) operador -> . DIVIDE
    (17) operador -> . MODULO
    (18) operador -> . EXPONENCIACION

  ! reduce/reduce conflict for $end resolved using rule 5 (valor -> valorNumerico .)
    $end            reduce using rule 5 (valor -> valorNumerico .)
    MAS             shift and go to state 13
    MENOS           shift and go to state 14
    MULTIPLICA      shift and go to state 15
    DIVIDE          shift and go to state 16
    MODULO          shift and go to state 17
    EXPONENCIACION  shift and go to state 18

  ! $end            [ reduce using rule 11 (operacion -> valorNumerico .) ]

    operador                       shift and go to state 12

state 7

    (6) valor -> CADENA .

    $end            reduce using rule 6 (valor -> CADENA .)


state 8

    (19) asignacion -> VARIABLE . OPERASIGNACION valor
    (25) asignacion_abreviatura_op -> VARIABLE . asignacion_abreviado valorNumerico
    (9) valorNumerico -> VARIABLE .
    (20) asignacion_abreviado -> . MASIGUAL
    (21) asignacion_abreviado -> . MENOSIGUAL
    (22) asignacion_abreviado -> . ASTERISCOIGUAL
    (23) asignacion_abreviado -> . BARRAIGUAL
    (24) asignacion_abreviado -> . PORCENTAJEIGUAL

    OPERASIGNACION  shift and go to state 19
    MAS             reduce using rule 9 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 9 (valorNumerico -> VARIABLE .)
    MULTIPLICA      reduce using rule 9 (valorNumerico -> VARIABLE .)
    DIVIDE          reduce using rule 9 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 9 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 9 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 9 (valorNumerico -> VARIABLE .)
    MASIGUAL        shift and go to state 21
    MENOSIGUAL      shift and go to state 22
    ASTERISCOIGUAL  shift and go to state 23
    BARRAIGUAL      shift and go to state 24
    PORCENTAJEIGUAL shift and go to state 25

    asignacion_abreviado           shift and go to state 20

state 9

    (7) valorNumerico -> ENTERO .

    MAS             reduce using rule 7 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 7 (valorNumerico -> ENTERO .)
    MULTIPLICA      reduce using rule 7 (valorNumerico -> ENTERO .)
    DIVIDE          reduce using rule 7 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 7 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 7 (valorNumerico -> ENTERO .)
    $end            reduce using rule 7 (valorNumerico -> ENTERO .)


state 10

    (8) valorNumerico -> FLOTANTE .

    MAS             reduce using rule 8 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 8 (valorNumerico -> FLOTANTE .)
    MULTIPLICA      reduce using rule 8 (valorNumerico -> FLOTANTE .)
    DIVIDE          reduce using rule 8 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 8 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 8 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 8 (valorNumerico -> FLOTANTE .)


state 11

    (10) valorNumerico -> BOOLEANO .

    MAS             reduce using rule 10 (valorNumerico -> BOOLEANO .)
    MENOS           reduce using rule 10 (valorNumerico -> BOOLEANO .)
    MULTIPLICA      reduce using rule 10 (valorNumerico -> BOOLEANO .)
    DIVIDE          reduce using rule 10 (valorNumerico -> BOOLEANO .)
    MODULO          reduce using rule 10 (valorNumerico -> BOOLEANO .)
    EXPONENCIACION  reduce using rule 10 (valorNumerico -> BOOLEANO .)
    $end            reduce using rule 10 (valorNumerico -> BOOLEANO .)


state 12

    (12) operacion -> valorNumerico operador . operacion
    (11) operacion -> . valorNumerico
    (12) operacion -> . valorNumerico operador operacion
    (7) valorNumerico -> . ENTERO
    (8) valorNumerico -> . FLOTANTE
    (9) valorNumerico -> . VARIABLE
    (10) valorNumerico -> . BOOLEANO

    ENTERO          shift and go to state 9
    FLOTANTE        shift and go to state 10
    VARIABLE        shift and go to state 28
    BOOLEANO        shift and go to state 11

    valorNumerico                  shift and go to state 26
    operacion                      shift and go to state 27

state 13

    (13) operador -> MAS .

    ENTERO          reduce using rule 13 (operador -> MAS .)
    FLOTANTE        reduce using rule 13 (operador -> MAS .)
    VARIABLE        reduce using rule 13 (operador -> MAS .)
    BOOLEANO        reduce using rule 13 (operador -> MAS .)


state 14

    (14) operador -> MENOS .

    ENTERO          reduce using rule 14 (operador -> MENOS .)
    FLOTANTE        reduce using rule 14 (operador -> MENOS .)
    VARIABLE        reduce using rule 14 (operador -> MENOS .)
    BOOLEANO        reduce using rule 14 (operador -> MENOS .)


state 15

    (15) operador -> MULTIPLICA .

    ENTERO          reduce using rule 15 (operador -> MULTIPLICA .)
    FLOTANTE        reduce using rule 15 (operador -> MULTIPLICA .)
    VARIABLE        reduce using rule 15 (operador -> MULTIPLICA .)
    BOOLEANO        reduce using rule 15 (operador -> MULTIPLICA .)


state 16

    (16) operador -> DIVIDE .

    ENTERO          reduce using rule 16 (operador -> DIVIDE .)
    FLOTANTE        reduce using rule 16 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 16 (operador -> DIVIDE .)
    BOOLEANO        reduce using rule 16 (operador -> DIVIDE .)


state 17

    (17) operador -> MODULO .

    ENTERO          reduce using rule 17 (operador -> MODULO .)
    FLOTANTE        reduce using rule 17 (operador -> MODULO .)
    VARIABLE        reduce using rule 17 (operador -> MODULO .)
    BOOLEANO        reduce using rule 17 (operador -> MODULO .)


state 18

    (18) operador -> EXPONENCIACION .

    ENTERO          reduce using rule 18 (operador -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 18 (operador -> EXPONENCIACION .)
    VARIABLE        reduce using rule 18 (operador -> EXPONENCIACION .)
    BOOLEANO        reduce using rule 18 (operador -> EXPONENCIACION .)


state 19

    (19) asignacion -> VARIABLE OPERASIGNACION . valor
    (5) valor -> . valorNumerico
    (6) valor -> . CADENA
    (7) valorNumerico -> . ENTERO
    (8) valorNumerico -> . FLOTANTE
    (9) valorNumerico -> . VARIABLE
    (10) valorNumerico -> . BOOLEANO

    CADENA          shift and go to state 7
    ENTERO          shift and go to state 9
    FLOTANTE        shift and go to state 10
    VARIABLE        shift and go to state 28
    BOOLEANO        shift and go to state 11

    valor                          shift and go to state 29
    valorNumerico                  shift and go to state 30

state 20

    (25) asignacion_abreviatura_op -> VARIABLE asignacion_abreviado . valorNumerico
    (7) valorNumerico -> . ENTERO
    (8) valorNumerico -> . FLOTANTE
    (9) valorNumerico -> . VARIABLE
    (10) valorNumerico -> . BOOLEANO

    ENTERO          shift and go to state 9
    FLOTANTE        shift and go to state 10
    VARIABLE        shift and go to state 28
    BOOLEANO        shift and go to state 11

    valorNumerico                  shift and go to state 31

state 21

    (20) asignacion_abreviado -> MASIGUAL .

    ENTERO          reduce using rule 20 (asignacion_abreviado -> MASIGUAL .)
    FLOTANTE        reduce using rule 20 (asignacion_abreviado -> MASIGUAL .)
    VARIABLE        reduce using rule 20 (asignacion_abreviado -> MASIGUAL .)
    BOOLEANO        reduce using rule 20 (asignacion_abreviado -> MASIGUAL .)


state 22

    (21) asignacion_abreviado -> MENOSIGUAL .

    ENTERO          reduce using rule 21 (asignacion_abreviado -> MENOSIGUAL .)
    FLOTANTE        reduce using rule 21 (asignacion_abreviado -> MENOSIGUAL .)
    VARIABLE        reduce using rule 21 (asignacion_abreviado -> MENOSIGUAL .)
    BOOLEANO        reduce using rule 21 (asignacion_abreviado -> MENOSIGUAL .)


state 23

    (22) asignacion_abreviado -> ASTERISCOIGUAL .

    ENTERO          reduce using rule 22 (asignacion_abreviado -> ASTERISCOIGUAL .)
    FLOTANTE        reduce using rule 22 (asignacion_abreviado -> ASTERISCOIGUAL .)
    VARIABLE        reduce using rule 22 (asignacion_abreviado -> ASTERISCOIGUAL .)
    BOOLEANO        reduce using rule 22 (asignacion_abreviado -> ASTERISCOIGUAL .)


state 24

    (23) asignacion_abreviado -> BARRAIGUAL .

    ENTERO          reduce using rule 23 (asignacion_abreviado -> BARRAIGUAL .)
    FLOTANTE        reduce using rule 23 (asignacion_abreviado -> BARRAIGUAL .)
    VARIABLE        reduce using rule 23 (asignacion_abreviado -> BARRAIGUAL .)
    BOOLEANO        reduce using rule 23 (asignacion_abreviado -> BARRAIGUAL .)


state 25

    (24) asignacion_abreviado -> PORCENTAJEIGUAL .

    ENTERO          reduce using rule 24 (asignacion_abreviado -> PORCENTAJEIGUAL .)
    FLOTANTE        reduce using rule 24 (asignacion_abreviado -> PORCENTAJEIGUAL .)
    VARIABLE        reduce using rule 24 (asignacion_abreviado -> PORCENTAJEIGUAL .)
    BOOLEANO        reduce using rule 24 (asignacion_abreviado -> PORCENTAJEIGUAL .)


state 26

    (11) operacion -> valorNumerico .
    (12) operacion -> valorNumerico . operador operacion
    (13) operador -> . MAS
    (14) operador -> . MENOS
    (15) operador -> . MULTIPLICA
    (16) operador -> . DIVIDE
    (17) operador -> . MODULO
    (18) operador -> . EXPONENCIACION

    $end            reduce using rule 11 (operacion -> valorNumerico .)
    MAS             shift and go to state 13
    MENOS           shift and go to state 14
    MULTIPLICA      shift and go to state 15
    DIVIDE          shift and go to state 16
    MODULO          shift and go to state 17
    EXPONENCIACION  shift and go to state 18

    operador                       shift and go to state 12

state 27

    (12) operacion -> valorNumerico operador operacion .

    $end            reduce using rule 12 (operacion -> valorNumerico operador operacion .)


state 28

    (9) valorNumerico -> VARIABLE .

    MAS             reduce using rule 9 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 9 (valorNumerico -> VARIABLE .)
    MULTIPLICA      reduce using rule 9 (valorNumerico -> VARIABLE .)
    DIVIDE          reduce using rule 9 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 9 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 9 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 9 (valorNumerico -> VARIABLE .)


state 29

    (19) asignacion -> VARIABLE OPERASIGNACION valor .

    $end            reduce using rule 19 (asignacion -> VARIABLE OPERASIGNACION valor .)


state 30

    (5) valor -> valorNumerico .

    $end            reduce using rule 5 (valor -> valorNumerico .)


state 31

    (25) asignacion_abreviatura_op -> VARIABLE asignacion_abreviado valorNumerico .

    $end            reduce using rule 25 (asignacion_abreviatura_op -> VARIABLE asignacion_abreviado valorNumerico .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 6 resolved using rule (valor -> valorNumerico)
WARNING: rejected rule (operacion -> valorNumerico) in state 6
