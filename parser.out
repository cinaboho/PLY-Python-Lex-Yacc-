Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMENTARIO_ABIERTO
    COMENTARIO_CERRADO
    COMENTARIO_UNA_LINEA
    CORCHDER
    CORCHIZQ
    DOSPUNTOS
    FIN
    INICIO
    OPERLOG_AND
    PUNTO
    as
    break
    case
    class
    const
    continue
    default
    else
    end_switch
    end_while
    extends
    for
    function
    global
    new
    private
    protected
    public
    return
    static
    switch

Grammar

Rule 0     S' -> codigoFuente
Rule 1     codigoFuente -> valor
Rule 2     codigoFuente -> variable
Rule 3     codigoFuente -> impresionEcho
Rule 4     codigoFuente -> impresionPrint
Rule 5     codigoFuente -> valores
Rule 6     codigoFuente -> asignacion
Rule 7     codigoFuente -> operacionesA
Rule 8     codigoFuente -> operacionesC
Rule 9     codigoFuente -> operacionesL
Rule 10    codigoFuente -> condIf
Rule 11    codigoFuente -> opCombinadas
Rule 12    codigoFuente -> bucleDoWhile
Rule 13    codigoFuente -> crearArreglos
Rule 14    codigoFuente -> bucleForEach
Rule 15    codigoFuente -> metodosArray
Rule 16    codigoFuente -> opLogicos
Rule 17    codigoFuente -> operadoresA
Rule 18    codigoFuente -> operadoresC
Rule 19    codigoFuente -> sentencias
Rule 20    codigoFuente -> <empty>
Rule 21    valor -> CADENA
Rule 22    valor -> ENTERO
Rule 23    valor -> FLOTANTE
Rule 24    valor -> BOOLEANO
Rule 25    variable -> DOLAR IDENTIFICADOR
Rule 26    valores -> valor
Rule 27    valores -> variable
Rule 28    operacionesV -> FLOTANTE
Rule 29    operacionesV -> ENTERO
Rule 30    operacionesV -> variable
Rule 31    opLog -> BOOLEANO
Rule 32    opLog -> variable
Rule 33    impresionEcho -> echo CADENA PUNTOYCOMA
Rule 34    asignacion -> variable OPERASIGNACION valor PUNTOYCOMA
Rule 35    operadoresA -> SUMA
Rule 36    operadoresA -> RESTA
Rule 37    operadoresA -> MULTIPLICACION
Rule 38    operadoresA -> DIVISION
Rule 39    operadoresA -> MODULO
Rule 40    operadoresA -> EXPONENCIACION
Rule 41    operacionesA -> operacionesV operadoresA operacionesV
Rule 42    operacionesA -> operacionesV operadoresA operacionesA
Rule 43    operadoresC -> OPERCOMPARACION
Rule 44    operadoresC -> OPERCOMPARACION OPERASIGNACION
Rule 45    operadoresC -> OPERLOGICO_NOT OPERASIGNACION
Rule 46    operadoresC -> MENORQUE MAYORQUE
Rule 47    operadoresC -> OPERLOGICO_NOT OPERCOMPARACION
Rule 48    operadoresC -> MENORQUE
Rule 49    operadoresC -> MAYORQUE
Rule 50    operadoresC -> MENORQUE OPERASIGNACION
Rule 51    operadoresC -> MAYORQUE OPERASIGNACION
Rule 52    operadoresC -> MENORQUE OPERASIGNACION MAYORQUE
Rule 53    operacionesC -> valores operadoresC valores
Rule 54    opLogicos -> OPERLOGICO_AND
Rule 55    opLogicos -> OPERLOGICO_OR
Rule 56    opLogicos -> OPERLOGICO_XOR
Rule 57    opLogicos -> OPERLOGICO_NOT
Rule 58    opLogicos -> AMPERSAND AMPERSAND
Rule 59    opLogicos -> OPERLOGICO_OREXCLUSIVO
Rule 60    operacionesL -> opLog opLogicos opLog
Rule 61    sentencias -> operacionesL PUNTOYCOMA
Rule 62    sentencias -> operacionesA PUNTOYCOMA
Rule 63    sentencias -> operacionesC PUNTOYCOMA
Rule 64    sentencias -> asignacion
Rule 65    sentencias -> sentencias
Rule 66    opCombinadas -> variable OPERASIGNACION operacionesA
Rule 67    opCombinadas -> variable OPERASIGNACION operacionesL
Rule 68    opCombinadas -> variable OPERASIGNACION operacionesC
Rule 69    impresionPrint -> print PARENIZQ valores PARENDER PUNTOYCOMA
Rule 70    impresionPrint -> print PARENIZQ operacionesL PARENDER PUNTOYCOMA
Rule 71    impresionPrint -> print PARENIZQ operacionesC PARENDER PUNTOYCOMA
Rule 72    impresionPrint -> print PARENIZQ operacionesA PARENDER PUNTOYCOMA
Rule 73    retornoBool -> BOOLEANO
Rule 74    retornoBool -> operacionesL
Rule 75    retornoBool -> operacionesC
Rule 76    condIf -> if PARENIZQ retornoBool PARENDER PUNTOYCOMA
Rule 77    condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ sentencias LLAVEDER
Rule 78    condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionPrint LLAVEDER
Rule 79    condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionEcho LLAVEDER
Rule 80    bucleDoWhile -> do LLAVEIZQ sentencias LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
Rule 81    bucleDoWhile -> do LLAVEIZQ impresionPrint LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
Rule 82    bucleDoWhile -> do LLAVEIZQ impresionEcho LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
Rule 83    rellenoArray -> valores OPERASIG_ARRAY valores COMA
Rule 84    rellenoArray -> valores
Rule 85    rellenoArray -> COMA valores OPERASIG_ARRAY valores COMA rellenoArray
Rule 86    crearArreglos -> variable OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA
Rule 87    bucleForEach -> variable IDENTIFICADOR variable LLAVEIZQ sentencias LLAVEDER
Rule 88    bucleForEach -> variable IDENTIFICADOR variable OPERASIG_ARRAY variable LLAVEIZQ sentencias LLAVEDER
Rule 89    metodosArray -> rsort PARENIZQ variable PARENDER PUNTOYCOMA
Rule 90    metodosArray -> rsort PARENIZQ crearArreglos PARENDER PUNTOYCOMA
Rule 91    metodosArray -> count PARENIZQ variable PARENDER PUNTOYCOMA
Rule 92    metodosArray -> count PARENIZQ crearArreglos PARENDER PUNTOYCOMA

Terminals, with rules where they appear

AMPERSAND            : 58 58
BOOLEANO             : 24 31 73
CADENA               : 21 33
COMA                 : 83 85 85
COMENTARIO_ABIERTO   : 
COMENTARIO_CERRADO   : 
COMENTARIO_UNA_LINEA : 
CORCHDER             : 
CORCHIZQ             : 
DIVISION             : 38
DOLAR                : 25
DOSPUNTOS            : 
ENTERO               : 22 29
EXPONENCIACION       : 40
FIN                  : 
FLOTANTE             : 23 28
IDENTIFICADOR        : 25 87 88
INICIO               : 
LLAVEDER             : 77 78 79 80 81 82 87 88
LLAVEIZQ             : 77 78 79 80 81 82 87 88
MAYORQUE             : 46 49 51 52
MENORQUE             : 46 48 50 52
MODULO               : 39
MULTIPLICACION       : 37
OPERASIGNACION       : 34 44 45 50 51 52 66 67 68 86
OPERASIG_ARRAY       : 83 85 88
OPERCOMPARACION      : 43 44 47
OPERLOGICO_AND       : 54
OPERLOGICO_NOT       : 45 47 57
OPERLOGICO_OR        : 55
OPERLOGICO_OREXCLUSIVO : 59
OPERLOGICO_XOR       : 56
OPERLOG_AND          : 
PARENDER             : 69 70 71 72 76 77 78 79 80 81 82 86 89 90 91 92
PARENIZQ             : 69 70 71 72 76 77 78 79 80 81 82 86 89 90 91 92
PUNTO                : 
PUNTOYCOMA           : 33 34 61 62 63 69 70 71 72 76 80 81 82 86 89 90 91 92
RESTA                : 36
SUMA                 : 35
array                : 86
as                   : 
break                : 
case                 : 
class                : 
const                : 
continue             : 
count                : 91 92
default              : 
do                   : 80 81 82
echo                 : 33
else                 : 
end_switch           : 
end_while            : 
error                : 
extends              : 
for                  : 
function             : 
global               : 
if                   : 76 77 78 79
new                  : 
print                : 69 70 71 72
private              : 
protected            : 
public               : 
return               : 
rsort                : 89 90
static               : 
switch               : 
while                : 80 81 82

Nonterminals, with rules where they appear

asignacion           : 6 64
bucleDoWhile         : 12
bucleForEach         : 14
codigoFuente         : 0
condIf               : 10
crearArreglos        : 13 90 92
impresionEcho        : 3 79 82
impresionPrint       : 4 78 81
metodosArray         : 15
opCombinadas         : 11
opLog                : 60 60
opLogicos            : 16 60
operacionesA         : 7 42 62 66 72
operacionesC         : 8 63 68 71 75
operacionesL         : 9 61 67 70 74
operacionesV         : 41 41 42
operadoresA          : 17 41 42
operadoresC          : 18 53
rellenoArray         : 85 86
retornoBool          : 76 77 78 79 80 81 82
sentencias           : 19 65 77 80 87 88
valor                : 1 26 34
valores              : 5 53 53 69 83 83 84 85 85
variable             : 2 27 30 32 34 66 67 68 86 87 87 88 88 88 89 91

Parsing method: LALR

state 0

    (0) S' -> . codigoFuente
    (1) codigoFuente -> . valor
    (2) codigoFuente -> . variable
    (3) codigoFuente -> . impresionEcho
    (4) codigoFuente -> . impresionPrint
    (5) codigoFuente -> . valores
    (6) codigoFuente -> . asignacion
    (7) codigoFuente -> . operacionesA
    (8) codigoFuente -> . operacionesC
    (9) codigoFuente -> . operacionesL
    (10) codigoFuente -> . condIf
    (11) codigoFuente -> . opCombinadas
    (12) codigoFuente -> . bucleDoWhile
    (13) codigoFuente -> . crearArreglos
    (14) codigoFuente -> . bucleForEach
    (15) codigoFuente -> . metodosArray
    (16) codigoFuente -> . opLogicos
    (17) codigoFuente -> . operadoresA
    (18) codigoFuente -> . operadoresC
    (19) codigoFuente -> . sentencias
    (20) codigoFuente -> .
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO
    (25) variable -> . DOLAR IDENTIFICADOR
    (33) impresionEcho -> . echo CADENA PUNTOYCOMA
    (69) impresionPrint -> . print PARENIZQ valores PARENDER PUNTOYCOMA
    (70) impresionPrint -> . print PARENIZQ operacionesL PARENDER PUNTOYCOMA
    (71) impresionPrint -> . print PARENIZQ operacionesC PARENDER PUNTOYCOMA
    (72) impresionPrint -> . print PARENIZQ operacionesA PARENDER PUNTOYCOMA
    (26) valores -> . valor
    (27) valores -> . variable
    (34) asignacion -> . variable OPERASIGNACION valor PUNTOYCOMA
    (41) operacionesA -> . operacionesV operadoresA operacionesV
    (42) operacionesA -> . operacionesV operadoresA operacionesA
    (53) operacionesC -> . valores operadoresC valores
    (60) operacionesL -> . opLog opLogicos opLog
    (76) condIf -> . if PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (77) condIf -> . if PARENIZQ retornoBool PARENDER LLAVEIZQ sentencias LLAVEDER
    (78) condIf -> . if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionPrint LLAVEDER
    (79) condIf -> . if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionEcho LLAVEDER
    (66) opCombinadas -> . variable OPERASIGNACION operacionesA
    (67) opCombinadas -> . variable OPERASIGNACION operacionesL
    (68) opCombinadas -> . variable OPERASIGNACION operacionesC
    (80) bucleDoWhile -> . do LLAVEIZQ sentencias LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (81) bucleDoWhile -> . do LLAVEIZQ impresionPrint LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (82) bucleDoWhile -> . do LLAVEIZQ impresionEcho LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (86) crearArreglos -> . variable OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA
    (87) bucleForEach -> . variable IDENTIFICADOR variable LLAVEIZQ sentencias LLAVEDER
    (88) bucleForEach -> . variable IDENTIFICADOR variable OPERASIG_ARRAY variable LLAVEIZQ sentencias LLAVEDER
    (89) metodosArray -> . rsort PARENIZQ variable PARENDER PUNTOYCOMA
    (90) metodosArray -> . rsort PARENIZQ crearArreglos PARENDER PUNTOYCOMA
    (91) metodosArray -> . count PARENIZQ variable PARENDER PUNTOYCOMA
    (92) metodosArray -> . count PARENIZQ crearArreglos PARENDER PUNTOYCOMA
    (54) opLogicos -> . OPERLOGICO_AND
    (55) opLogicos -> . OPERLOGICO_OR
    (56) opLogicos -> . OPERLOGICO_XOR
    (57) opLogicos -> . OPERLOGICO_NOT
    (58) opLogicos -> . AMPERSAND AMPERSAND
    (59) opLogicos -> . OPERLOGICO_OREXCLUSIVO
    (35) operadoresA -> . SUMA
    (36) operadoresA -> . RESTA
    (37) operadoresA -> . MULTIPLICACION
    (38) operadoresA -> . DIVISION
    (39) operadoresA -> . MODULO
    (40) operadoresA -> . EXPONENCIACION
    (43) operadoresC -> . OPERCOMPARACION
    (44) operadoresC -> . OPERCOMPARACION OPERASIGNACION
    (45) operadoresC -> . OPERLOGICO_NOT OPERASIGNACION
    (46) operadoresC -> . MENORQUE MAYORQUE
    (47) operadoresC -> . OPERLOGICO_NOT OPERCOMPARACION
    (48) operadoresC -> . MENORQUE
    (49) operadoresC -> . MAYORQUE
    (50) operadoresC -> . MENORQUE OPERASIGNACION
    (51) operadoresC -> . MAYORQUE OPERASIGNACION
    (52) operadoresC -> . MENORQUE OPERASIGNACION MAYORQUE
    (61) sentencias -> . operacionesL PUNTOYCOMA
    (62) sentencias -> . operacionesA PUNTOYCOMA
    (63) sentencias -> . operacionesC PUNTOYCOMA
    (64) sentencias -> . asignacion
    (65) sentencias -> . sentencias
    (28) operacionesV -> . FLOTANTE
    (29) operacionesV -> . ENTERO
    (30) operacionesV -> . variable
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable

    $end            reduce using rule 20 (codigoFuente -> .)
    CADENA          shift and go to state 21
    ENTERO          shift and go to state 22
    FLOTANTE        shift and go to state 23
    BOOLEANO        shift and go to state 24
    DOLAR           shift and go to state 25
    echo            shift and go to state 26
    print           shift and go to state 27
    if              shift and go to state 30
    do              shift and go to state 31
    rsort           shift and go to state 32
    count           shift and go to state 33
    OPERLOGICO_AND  shift and go to state 34
    OPERLOGICO_OR   shift and go to state 35
    OPERLOGICO_XOR  shift and go to state 36
    OPERLOGICO_NOT  shift and go to state 37
    AMPERSAND       shift and go to state 38
    OPERLOGICO_OREXCLUSIVO shift and go to state 39
    SUMA            shift and go to state 40
    RESTA           shift and go to state 41
    MULTIPLICACION  shift and go to state 42
    DIVISION        shift and go to state 43
    MODULO          shift and go to state 44
    EXPONENCIACION  shift and go to state 45
    OPERCOMPARACION shift and go to state 46
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48

    codigoFuente                   shift and go to state 1
    valor                          shift and go to state 2
    variable                       shift and go to state 3
    impresionEcho                  shift and go to state 4
    impresionPrint                 shift and go to state 5
    valores                        shift and go to state 6
    asignacion                     shift and go to state 7
    operacionesA                   shift and go to state 8
    operacionesC                   shift and go to state 9
    operacionesL                   shift and go to state 10
    condIf                         shift and go to state 11
    opCombinadas                   shift and go to state 12
    bucleDoWhile                   shift and go to state 13
    crearArreglos                  shift and go to state 14
    bucleForEach                   shift and go to state 15
    metodosArray                   shift and go to state 16
    opLogicos                      shift and go to state 17
    operadoresA                    shift and go to state 18
    operadoresC                    shift and go to state 19
    sentencias                     shift and go to state 20
    operacionesV                   shift and go to state 28
    opLog                          shift and go to state 29

state 1

    (0) S' -> codigoFuente .



state 2

    (1) codigoFuente -> valor .
    (26) valores -> valor .

  ! reduce/reduce conflict for $end resolved using rule 1 (codigoFuente -> valor .)
    $end            reduce using rule 1 (codigoFuente -> valor .)
    OPERCOMPARACION reduce using rule 26 (valores -> valor .)
    OPERLOGICO_NOT  reduce using rule 26 (valores -> valor .)
    MENORQUE        reduce using rule 26 (valores -> valor .)
    MAYORQUE        reduce using rule 26 (valores -> valor .)

  ! $end            [ reduce using rule 26 (valores -> valor .) ]


state 3

    (2) codigoFuente -> variable .
    (27) valores -> variable .
    (34) asignacion -> variable . OPERASIGNACION valor PUNTOYCOMA
    (66) opCombinadas -> variable . OPERASIGNACION operacionesA
    (67) opCombinadas -> variable . OPERASIGNACION operacionesL
    (68) opCombinadas -> variable . OPERASIGNACION operacionesC
    (86) crearArreglos -> variable . OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA
    (87) bucleForEach -> variable . IDENTIFICADOR variable LLAVEIZQ sentencias LLAVEDER
    (88) bucleForEach -> variable . IDENTIFICADOR variable OPERASIG_ARRAY variable LLAVEIZQ sentencias LLAVEDER
    (30) operacionesV -> variable .
    (32) opLog -> variable .

  ! reduce/reduce conflict for $end resolved using rule 2 (codigoFuente -> variable .)
  ! reduce/reduce conflict for OPERLOGICO_NOT resolved using rule 27 (valores -> variable .)
    $end            reduce using rule 2 (codigoFuente -> variable .)
    OPERCOMPARACION reduce using rule 27 (valores -> variable .)
    OPERLOGICO_NOT  reduce using rule 27 (valores -> variable .)
    MENORQUE        reduce using rule 27 (valores -> variable .)
    MAYORQUE        reduce using rule 27 (valores -> variable .)
    OPERASIGNACION  shift and go to state 49
    IDENTIFICADOR   shift and go to state 50
    SUMA            reduce using rule 30 (operacionesV -> variable .)
    RESTA           reduce using rule 30 (operacionesV -> variable .)
    MULTIPLICACION  reduce using rule 30 (operacionesV -> variable .)
    DIVISION        reduce using rule 30 (operacionesV -> variable .)
    MODULO          reduce using rule 30 (operacionesV -> variable .)
    EXPONENCIACION  reduce using rule 30 (operacionesV -> variable .)
    OPERLOGICO_AND  reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OR   reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_XOR  reduce using rule 32 (opLog -> variable .)
    AMPERSAND       reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OREXCLUSIVO reduce using rule 32 (opLog -> variable .)

  ! $end            [ reduce using rule 27 (valores -> variable .) ]
  ! OPERLOGICO_NOT  [ reduce using rule 32 (opLog -> variable .) ]


state 4

    (3) codigoFuente -> impresionEcho .

    $end            reduce using rule 3 (codigoFuente -> impresionEcho .)


state 5

    (4) codigoFuente -> impresionPrint .

    $end            reduce using rule 4 (codigoFuente -> impresionPrint .)


state 6

    (5) codigoFuente -> valores .
    (53) operacionesC -> valores . operadoresC valores
    (43) operadoresC -> . OPERCOMPARACION
    (44) operadoresC -> . OPERCOMPARACION OPERASIGNACION
    (45) operadoresC -> . OPERLOGICO_NOT OPERASIGNACION
    (46) operadoresC -> . MENORQUE MAYORQUE
    (47) operadoresC -> . OPERLOGICO_NOT OPERCOMPARACION
    (48) operadoresC -> . MENORQUE
    (49) operadoresC -> . MAYORQUE
    (50) operadoresC -> . MENORQUE OPERASIGNACION
    (51) operadoresC -> . MAYORQUE OPERASIGNACION
    (52) operadoresC -> . MENORQUE OPERASIGNACION MAYORQUE

    $end            reduce using rule 5 (codigoFuente -> valores .)
    OPERCOMPARACION shift and go to state 46
    OPERLOGICO_NOT  shift and go to state 52
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48

    operadoresC                    shift and go to state 51

state 7

    (6) codigoFuente -> asignacion .
    (64) sentencias -> asignacion .

  ! reduce/reduce conflict for $end resolved using rule 6 (codigoFuente -> asignacion .)
    $end            reduce using rule 6 (codigoFuente -> asignacion .)

  ! $end            [ reduce using rule 64 (sentencias -> asignacion .) ]


state 8

    (7) codigoFuente -> operacionesA .
    (62) sentencias -> operacionesA . PUNTOYCOMA

    $end            reduce using rule 7 (codigoFuente -> operacionesA .)
    PUNTOYCOMA      shift and go to state 53


state 9

    (8) codigoFuente -> operacionesC .
    (63) sentencias -> operacionesC . PUNTOYCOMA

    $end            reduce using rule 8 (codigoFuente -> operacionesC .)
    PUNTOYCOMA      shift and go to state 54


state 10

    (9) codigoFuente -> operacionesL .
    (61) sentencias -> operacionesL . PUNTOYCOMA

    $end            reduce using rule 9 (codigoFuente -> operacionesL .)
    PUNTOYCOMA      shift and go to state 55


state 11

    (10) codigoFuente -> condIf .

    $end            reduce using rule 10 (codigoFuente -> condIf .)


state 12

    (11) codigoFuente -> opCombinadas .

    $end            reduce using rule 11 (codigoFuente -> opCombinadas .)


state 13

    (12) codigoFuente -> bucleDoWhile .

    $end            reduce using rule 12 (codigoFuente -> bucleDoWhile .)


state 14

    (13) codigoFuente -> crearArreglos .

    $end            reduce using rule 13 (codigoFuente -> crearArreglos .)


state 15

    (14) codigoFuente -> bucleForEach .

    $end            reduce using rule 14 (codigoFuente -> bucleForEach .)


state 16

    (15) codigoFuente -> metodosArray .

    $end            reduce using rule 15 (codigoFuente -> metodosArray .)


state 17

    (16) codigoFuente -> opLogicos .

    $end            reduce using rule 16 (codigoFuente -> opLogicos .)


state 18

    (17) codigoFuente -> operadoresA .

    $end            reduce using rule 17 (codigoFuente -> operadoresA .)


state 19

    (18) codigoFuente -> operadoresC .

    $end            reduce using rule 18 (codigoFuente -> operadoresC .)


state 20

    (19) codigoFuente -> sentencias .
    (65) sentencias -> sentencias .

  ! reduce/reduce conflict for $end resolved using rule 19 (codigoFuente -> sentencias .)
    $end            reduce using rule 19 (codigoFuente -> sentencias .)

  ! $end            [ reduce using rule 65 (sentencias -> sentencias .) ]


state 21

    (21) valor -> CADENA .

    $end            reduce using rule 21 (valor -> CADENA .)
    OPERCOMPARACION reduce using rule 21 (valor -> CADENA .)
    OPERLOGICO_NOT  reduce using rule 21 (valor -> CADENA .)
    MENORQUE        reduce using rule 21 (valor -> CADENA .)
    MAYORQUE        reduce using rule 21 (valor -> CADENA .)
    PUNTOYCOMA      reduce using rule 21 (valor -> CADENA .)
    PARENDER        reduce using rule 21 (valor -> CADENA .)
    OPERASIG_ARRAY  reduce using rule 21 (valor -> CADENA .)
    COMA            reduce using rule 21 (valor -> CADENA .)


state 22

    (22) valor -> ENTERO .
    (29) operacionesV -> ENTERO .

    $end            reduce using rule 22 (valor -> ENTERO .)
    OPERCOMPARACION reduce using rule 22 (valor -> ENTERO .)
    OPERLOGICO_NOT  reduce using rule 22 (valor -> ENTERO .)
    MENORQUE        reduce using rule 22 (valor -> ENTERO .)
    MAYORQUE        reduce using rule 22 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 22 (valor -> ENTERO .)
    PARENDER        reduce using rule 22 (valor -> ENTERO .)
    SUMA            reduce using rule 29 (operacionesV -> ENTERO .)
    RESTA           reduce using rule 29 (operacionesV -> ENTERO .)
    MULTIPLICACION  reduce using rule 29 (operacionesV -> ENTERO .)
    DIVISION        reduce using rule 29 (operacionesV -> ENTERO .)
    MODULO          reduce using rule 29 (operacionesV -> ENTERO .)
    EXPONENCIACION  reduce using rule 29 (operacionesV -> ENTERO .)


state 23

    (23) valor -> FLOTANTE .
    (28) operacionesV -> FLOTANTE .

    $end            reduce using rule 23 (valor -> FLOTANTE .)
    OPERCOMPARACION reduce using rule 23 (valor -> FLOTANTE .)
    OPERLOGICO_NOT  reduce using rule 23 (valor -> FLOTANTE .)
    MENORQUE        reduce using rule 23 (valor -> FLOTANTE .)
    MAYORQUE        reduce using rule 23 (valor -> FLOTANTE .)
    PUNTOYCOMA      reduce using rule 23 (valor -> FLOTANTE .)
    PARENDER        reduce using rule 23 (valor -> FLOTANTE .)
    SUMA            reduce using rule 28 (operacionesV -> FLOTANTE .)
    RESTA           reduce using rule 28 (operacionesV -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 28 (operacionesV -> FLOTANTE .)
    DIVISION        reduce using rule 28 (operacionesV -> FLOTANTE .)
    MODULO          reduce using rule 28 (operacionesV -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 28 (operacionesV -> FLOTANTE .)


state 24

    (24) valor -> BOOLEANO .
    (31) opLog -> BOOLEANO .

  ! reduce/reduce conflict for OPERLOGICO_NOT resolved using rule 24 (valor -> BOOLEANO .)
    $end            reduce using rule 24 (valor -> BOOLEANO .)
    OPERCOMPARACION reduce using rule 24 (valor -> BOOLEANO .)
    OPERLOGICO_NOT  reduce using rule 24 (valor -> BOOLEANO .)
    MENORQUE        reduce using rule 24 (valor -> BOOLEANO .)
    MAYORQUE        reduce using rule 24 (valor -> BOOLEANO .)
    PUNTOYCOMA      reduce using rule 24 (valor -> BOOLEANO .)
    PARENDER        reduce using rule 24 (valor -> BOOLEANO .)
    OPERLOGICO_AND  reduce using rule 31 (opLog -> BOOLEANO .)
    OPERLOGICO_OR   reduce using rule 31 (opLog -> BOOLEANO .)
    OPERLOGICO_XOR  reduce using rule 31 (opLog -> BOOLEANO .)
    AMPERSAND       reduce using rule 31 (opLog -> BOOLEANO .)
    OPERLOGICO_OREXCLUSIVO reduce using rule 31 (opLog -> BOOLEANO .)

  ! OPERLOGICO_NOT  [ reduce using rule 31 (opLog -> BOOLEANO .) ]


state 25

    (25) variable -> DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 56


state 26

    (33) impresionEcho -> echo . CADENA PUNTOYCOMA

    CADENA          shift and go to state 57


state 27

    (69) impresionPrint -> print . PARENIZQ valores PARENDER PUNTOYCOMA
    (70) impresionPrint -> print . PARENIZQ operacionesL PARENDER PUNTOYCOMA
    (71) impresionPrint -> print . PARENIZQ operacionesC PARENDER PUNTOYCOMA
    (72) impresionPrint -> print . PARENIZQ operacionesA PARENDER PUNTOYCOMA

    PARENIZQ        shift and go to state 58


state 28

    (41) operacionesA -> operacionesV . operadoresA operacionesV
    (42) operacionesA -> operacionesV . operadoresA operacionesA
    (35) operadoresA -> . SUMA
    (36) operadoresA -> . RESTA
    (37) operadoresA -> . MULTIPLICACION
    (38) operadoresA -> . DIVISION
    (39) operadoresA -> . MODULO
    (40) operadoresA -> . EXPONENCIACION

    SUMA            shift and go to state 40
    RESTA           shift and go to state 41
    MULTIPLICACION  shift and go to state 42
    DIVISION        shift and go to state 43
    MODULO          shift and go to state 44
    EXPONENCIACION  shift and go to state 45

    operadoresA                    shift and go to state 59

state 29

    (60) operacionesL -> opLog . opLogicos opLog
    (54) opLogicos -> . OPERLOGICO_AND
    (55) opLogicos -> . OPERLOGICO_OR
    (56) opLogicos -> . OPERLOGICO_XOR
    (57) opLogicos -> . OPERLOGICO_NOT
    (58) opLogicos -> . AMPERSAND AMPERSAND
    (59) opLogicos -> . OPERLOGICO_OREXCLUSIVO

    OPERLOGICO_AND  shift and go to state 34
    OPERLOGICO_OR   shift and go to state 35
    OPERLOGICO_XOR  shift and go to state 36
    OPERLOGICO_NOT  shift and go to state 61
    AMPERSAND       shift and go to state 38
    OPERLOGICO_OREXCLUSIVO shift and go to state 39

    opLogicos                      shift and go to state 60

state 30

    (76) condIf -> if . PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (77) condIf -> if . PARENIZQ retornoBool PARENDER LLAVEIZQ sentencias LLAVEDER
    (78) condIf -> if . PARENIZQ retornoBool PARENDER LLAVEIZQ impresionPrint LLAVEDER
    (79) condIf -> if . PARENIZQ retornoBool PARENDER LLAVEIZQ impresionEcho LLAVEDER

    PARENIZQ        shift and go to state 62


state 31

    (80) bucleDoWhile -> do . LLAVEIZQ sentencias LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (81) bucleDoWhile -> do . LLAVEIZQ impresionPrint LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (82) bucleDoWhile -> do . LLAVEIZQ impresionEcho LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA

    LLAVEIZQ        shift and go to state 63


state 32

    (89) metodosArray -> rsort . PARENIZQ variable PARENDER PUNTOYCOMA
    (90) metodosArray -> rsort . PARENIZQ crearArreglos PARENDER PUNTOYCOMA

    PARENIZQ        shift and go to state 64


state 33

    (91) metodosArray -> count . PARENIZQ variable PARENDER PUNTOYCOMA
    (92) metodosArray -> count . PARENIZQ crearArreglos PARENDER PUNTOYCOMA

    PARENIZQ        shift and go to state 65


state 34

    (54) opLogicos -> OPERLOGICO_AND .

    $end            reduce using rule 54 (opLogicos -> OPERLOGICO_AND .)
    BOOLEANO        reduce using rule 54 (opLogicos -> OPERLOGICO_AND .)
    DOLAR           reduce using rule 54 (opLogicos -> OPERLOGICO_AND .)


state 35

    (55) opLogicos -> OPERLOGICO_OR .

    $end            reduce using rule 55 (opLogicos -> OPERLOGICO_OR .)
    BOOLEANO        reduce using rule 55 (opLogicos -> OPERLOGICO_OR .)
    DOLAR           reduce using rule 55 (opLogicos -> OPERLOGICO_OR .)


state 36

    (56) opLogicos -> OPERLOGICO_XOR .

    $end            reduce using rule 56 (opLogicos -> OPERLOGICO_XOR .)
    BOOLEANO        reduce using rule 56 (opLogicos -> OPERLOGICO_XOR .)
    DOLAR           reduce using rule 56 (opLogicos -> OPERLOGICO_XOR .)


state 37

    (57) opLogicos -> OPERLOGICO_NOT .
    (45) operadoresC -> OPERLOGICO_NOT . OPERASIGNACION
    (47) operadoresC -> OPERLOGICO_NOT . OPERCOMPARACION

    $end            reduce using rule 57 (opLogicos -> OPERLOGICO_NOT .)
    OPERASIGNACION  shift and go to state 66
    OPERCOMPARACION shift and go to state 67


state 38

    (58) opLogicos -> AMPERSAND . AMPERSAND

    AMPERSAND       shift and go to state 68


state 39

    (59) opLogicos -> OPERLOGICO_OREXCLUSIVO .

    $end            reduce using rule 59 (opLogicos -> OPERLOGICO_OREXCLUSIVO .)
    BOOLEANO        reduce using rule 59 (opLogicos -> OPERLOGICO_OREXCLUSIVO .)
    DOLAR           reduce using rule 59 (opLogicos -> OPERLOGICO_OREXCLUSIVO .)


state 40

    (35) operadoresA -> SUMA .

    $end            reduce using rule 35 (operadoresA -> SUMA .)
    FLOTANTE        reduce using rule 35 (operadoresA -> SUMA .)
    ENTERO          reduce using rule 35 (operadoresA -> SUMA .)
    DOLAR           reduce using rule 35 (operadoresA -> SUMA .)


state 41

    (36) operadoresA -> RESTA .

    $end            reduce using rule 36 (operadoresA -> RESTA .)
    FLOTANTE        reduce using rule 36 (operadoresA -> RESTA .)
    ENTERO          reduce using rule 36 (operadoresA -> RESTA .)
    DOLAR           reduce using rule 36 (operadoresA -> RESTA .)


state 42

    (37) operadoresA -> MULTIPLICACION .

    $end            reduce using rule 37 (operadoresA -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 37 (operadoresA -> MULTIPLICACION .)
    ENTERO          reduce using rule 37 (operadoresA -> MULTIPLICACION .)
    DOLAR           reduce using rule 37 (operadoresA -> MULTIPLICACION .)


state 43

    (38) operadoresA -> DIVISION .

    $end            reduce using rule 38 (operadoresA -> DIVISION .)
    FLOTANTE        reduce using rule 38 (operadoresA -> DIVISION .)
    ENTERO          reduce using rule 38 (operadoresA -> DIVISION .)
    DOLAR           reduce using rule 38 (operadoresA -> DIVISION .)


state 44

    (39) operadoresA -> MODULO .

    $end            reduce using rule 39 (operadoresA -> MODULO .)
    FLOTANTE        reduce using rule 39 (operadoresA -> MODULO .)
    ENTERO          reduce using rule 39 (operadoresA -> MODULO .)
    DOLAR           reduce using rule 39 (operadoresA -> MODULO .)


state 45

    (40) operadoresA -> EXPONENCIACION .

    $end            reduce using rule 40 (operadoresA -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 40 (operadoresA -> EXPONENCIACION .)
    ENTERO          reduce using rule 40 (operadoresA -> EXPONENCIACION .)
    DOLAR           reduce using rule 40 (operadoresA -> EXPONENCIACION .)


state 46

    (43) operadoresC -> OPERCOMPARACION .
    (44) operadoresC -> OPERCOMPARACION . OPERASIGNACION

    $end            reduce using rule 43 (operadoresC -> OPERCOMPARACION .)
    CADENA          reduce using rule 43 (operadoresC -> OPERCOMPARACION .)
    ENTERO          reduce using rule 43 (operadoresC -> OPERCOMPARACION .)
    FLOTANTE        reduce using rule 43 (operadoresC -> OPERCOMPARACION .)
    BOOLEANO        reduce using rule 43 (operadoresC -> OPERCOMPARACION .)
    DOLAR           reduce using rule 43 (operadoresC -> OPERCOMPARACION .)
    OPERASIGNACION  shift and go to state 69


state 47

    (46) operadoresC -> MENORQUE . MAYORQUE
    (48) operadoresC -> MENORQUE .
    (50) operadoresC -> MENORQUE . OPERASIGNACION
    (52) operadoresC -> MENORQUE . OPERASIGNACION MAYORQUE

    MAYORQUE        shift and go to state 70
    $end            reduce using rule 48 (operadoresC -> MENORQUE .)
    CADENA          reduce using rule 48 (operadoresC -> MENORQUE .)
    ENTERO          reduce using rule 48 (operadoresC -> MENORQUE .)
    FLOTANTE        reduce using rule 48 (operadoresC -> MENORQUE .)
    BOOLEANO        reduce using rule 48 (operadoresC -> MENORQUE .)
    DOLAR           reduce using rule 48 (operadoresC -> MENORQUE .)
    OPERASIGNACION  shift and go to state 71


state 48

    (49) operadoresC -> MAYORQUE .
    (51) operadoresC -> MAYORQUE . OPERASIGNACION

    $end            reduce using rule 49 (operadoresC -> MAYORQUE .)
    CADENA          reduce using rule 49 (operadoresC -> MAYORQUE .)
    ENTERO          reduce using rule 49 (operadoresC -> MAYORQUE .)
    FLOTANTE        reduce using rule 49 (operadoresC -> MAYORQUE .)
    BOOLEANO        reduce using rule 49 (operadoresC -> MAYORQUE .)
    DOLAR           reduce using rule 49 (operadoresC -> MAYORQUE .)
    OPERASIGNACION  shift and go to state 72


state 49

    (34) asignacion -> variable OPERASIGNACION . valor PUNTOYCOMA
    (66) opCombinadas -> variable OPERASIGNACION . operacionesA
    (67) opCombinadas -> variable OPERASIGNACION . operacionesL
    (68) opCombinadas -> variable OPERASIGNACION . operacionesC
    (86) crearArreglos -> variable OPERASIGNACION . array PARENIZQ rellenoArray PARENDER PUNTOYCOMA
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO
    (41) operacionesA -> . operacionesV operadoresA operacionesV
    (42) operacionesA -> . operacionesV operadoresA operacionesA
    (60) operacionesL -> . opLog opLogicos opLog
    (53) operacionesC -> . valores operadoresC valores
    (28) operacionesV -> . FLOTANTE
    (29) operacionesV -> . ENTERO
    (30) operacionesV -> . variable
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (26) valores -> . valor
    (27) valores -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR

    array           shift and go to state 78
    CADENA          shift and go to state 21
    ENTERO          shift and go to state 22
    FLOTANTE        shift and go to state 23
    BOOLEANO        shift and go to state 24
    DOLAR           shift and go to state 25

    variable                       shift and go to state 73
    valor                          shift and go to state 74
    operacionesA                   shift and go to state 75
    operacionesL                   shift and go to state 76
    operacionesC                   shift and go to state 77
    operacionesV                   shift and go to state 28
    opLog                          shift and go to state 29
    valores                        shift and go to state 79

state 50

    (87) bucleForEach -> variable IDENTIFICADOR . variable LLAVEIZQ sentencias LLAVEDER
    (88) bucleForEach -> variable IDENTIFICADOR . variable OPERASIG_ARRAY variable LLAVEIZQ sentencias LLAVEDER
    (25) variable -> . DOLAR IDENTIFICADOR

    DOLAR           shift and go to state 25

    variable                       shift and go to state 80

state 51

    (53) operacionesC -> valores operadoresC . valores
    (26) valores -> . valor
    (27) valores -> . variable
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO
    (25) variable -> . DOLAR IDENTIFICADOR

    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85
    BOOLEANO        shift and go to state 86
    DOLAR           shift and go to state 25

    valores                        shift and go to state 81
    valor                          shift and go to state 82
    variable                       shift and go to state 83

state 52

    (45) operadoresC -> OPERLOGICO_NOT . OPERASIGNACION
    (47) operadoresC -> OPERLOGICO_NOT . OPERCOMPARACION

    OPERASIGNACION  shift and go to state 66
    OPERCOMPARACION shift and go to state 67


state 53

    (62) sentencias -> operacionesA PUNTOYCOMA .

    $end            reduce using rule 62 (sentencias -> operacionesA PUNTOYCOMA .)
    LLAVEDER        reduce using rule 62 (sentencias -> operacionesA PUNTOYCOMA .)


state 54

    (63) sentencias -> operacionesC PUNTOYCOMA .

    $end            reduce using rule 63 (sentencias -> operacionesC PUNTOYCOMA .)
    LLAVEDER        reduce using rule 63 (sentencias -> operacionesC PUNTOYCOMA .)


state 55

    (61) sentencias -> operacionesL PUNTOYCOMA .

    $end            reduce using rule 61 (sentencias -> operacionesL PUNTOYCOMA .)
    LLAVEDER        reduce using rule 61 (sentencias -> operacionesL PUNTOYCOMA .)


state 56

    (25) variable -> DOLAR IDENTIFICADOR .

    OPERASIGNACION  reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    $end            reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    OPERCOMPARACION reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    OPERLOGICO_NOT  reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    MENORQUE        reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    MAYORQUE        reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    SUMA            reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    RESTA           reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    MULTIPLICACION  reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    DIVISION        reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    MODULO          reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    EXPONENCIACION  reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    OPERLOGICO_AND  reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    OPERLOGICO_OR   reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    OPERLOGICO_XOR  reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    AMPERSAND       reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    OPERLOGICO_OREXCLUSIVO reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    LLAVEIZQ        reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    OPERASIG_ARRAY  reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    PUNTOYCOMA      reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    PARENDER        reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)
    COMA            reduce using rule 25 (variable -> DOLAR IDENTIFICADOR .)


state 57

    (33) impresionEcho -> echo CADENA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 87


state 58

    (69) impresionPrint -> print PARENIZQ . valores PARENDER PUNTOYCOMA
    (70) impresionPrint -> print PARENIZQ . operacionesL PARENDER PUNTOYCOMA
    (71) impresionPrint -> print PARENIZQ . operacionesC PARENDER PUNTOYCOMA
    (72) impresionPrint -> print PARENIZQ . operacionesA PARENDER PUNTOYCOMA
    (26) valores -> . valor
    (27) valores -> . variable
    (60) operacionesL -> . opLog opLogicos opLog
    (53) operacionesC -> . valores operadoresC valores
    (41) operacionesA -> . operacionesV operadoresA operacionesV
    (42) operacionesA -> . operacionesV operadoresA operacionesA
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO
    (25) variable -> . DOLAR IDENTIFICADOR
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (28) operacionesV -> . FLOTANTE
    (29) operacionesV -> . ENTERO
    (30) operacionesV -> . variable

    CADENA          shift and go to state 21
    ENTERO          shift and go to state 22
    FLOTANTE        shift and go to state 23
    BOOLEANO        shift and go to state 24
    DOLAR           shift and go to state 25

    valores                        shift and go to state 88
    operacionesL                   shift and go to state 89
    operacionesC                   shift and go to state 90
    operacionesA                   shift and go to state 91
    valor                          shift and go to state 82
    variable                       shift and go to state 92
    opLog                          shift and go to state 29
    operacionesV                   shift and go to state 28

state 59

    (41) operacionesA -> operacionesV operadoresA . operacionesV
    (42) operacionesA -> operacionesV operadoresA . operacionesA
    (28) operacionesV -> . FLOTANTE
    (29) operacionesV -> . ENTERO
    (30) operacionesV -> . variable
    (41) operacionesA -> . operacionesV operadoresA operacionesV
    (42) operacionesA -> . operacionesV operadoresA operacionesA
    (25) variable -> . DOLAR IDENTIFICADOR

    FLOTANTE        shift and go to state 95
    ENTERO          shift and go to state 96
    DOLAR           shift and go to state 25

    operacionesV                   shift and go to state 93
    operacionesA                   shift and go to state 94
    variable                       shift and go to state 97

state 60

    (60) operacionesL -> opLog opLogicos . opLog
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR

    BOOLEANO        shift and go to state 99
    DOLAR           shift and go to state 25

    opLog                          shift and go to state 98
    variable                       shift and go to state 100

state 61

    (57) opLogicos -> OPERLOGICO_NOT .

    BOOLEANO        reduce using rule 57 (opLogicos -> OPERLOGICO_NOT .)
    DOLAR           reduce using rule 57 (opLogicos -> OPERLOGICO_NOT .)


state 62

    (76) condIf -> if PARENIZQ . retornoBool PARENDER PUNTOYCOMA
    (77) condIf -> if PARENIZQ . retornoBool PARENDER LLAVEIZQ sentencias LLAVEDER
    (78) condIf -> if PARENIZQ . retornoBool PARENDER LLAVEIZQ impresionPrint LLAVEDER
    (79) condIf -> if PARENIZQ . retornoBool PARENDER LLAVEIZQ impresionEcho LLAVEDER
    (73) retornoBool -> . BOOLEANO
    (74) retornoBool -> . operacionesL
    (75) retornoBool -> . operacionesC
    (60) operacionesL -> . opLog opLogicos opLog
    (53) operacionesC -> . valores operadoresC valores
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (26) valores -> . valor
    (27) valores -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO

    BOOLEANO        shift and go to state 102
    DOLAR           shift and go to state 25
    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85

    retornoBool                    shift and go to state 101
    operacionesL                   shift and go to state 103
    operacionesC                   shift and go to state 104
    opLog                          shift and go to state 29
    valores                        shift and go to state 79
    variable                       shift and go to state 105
    valor                          shift and go to state 82

state 63

    (80) bucleDoWhile -> do LLAVEIZQ . sentencias LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (81) bucleDoWhile -> do LLAVEIZQ . impresionPrint LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (82) bucleDoWhile -> do LLAVEIZQ . impresionEcho LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (61) sentencias -> . operacionesL PUNTOYCOMA
    (62) sentencias -> . operacionesA PUNTOYCOMA
    (63) sentencias -> . operacionesC PUNTOYCOMA
    (64) sentencias -> . asignacion
    (65) sentencias -> . sentencias
    (69) impresionPrint -> . print PARENIZQ valores PARENDER PUNTOYCOMA
    (70) impresionPrint -> . print PARENIZQ operacionesL PARENDER PUNTOYCOMA
    (71) impresionPrint -> . print PARENIZQ operacionesC PARENDER PUNTOYCOMA
    (72) impresionPrint -> . print PARENIZQ operacionesA PARENDER PUNTOYCOMA
    (33) impresionEcho -> . echo CADENA PUNTOYCOMA
    (60) operacionesL -> . opLog opLogicos opLog
    (41) operacionesA -> . operacionesV operadoresA operacionesV
    (42) operacionesA -> . operacionesV operadoresA operacionesA
    (53) operacionesC -> . valores operadoresC valores
    (34) asignacion -> . variable OPERASIGNACION valor PUNTOYCOMA
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (28) operacionesV -> . FLOTANTE
    (29) operacionesV -> . ENTERO
    (30) operacionesV -> . variable
    (26) valores -> . valor
    (27) valores -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO

    print           shift and go to state 27
    echo            shift and go to state 26
    BOOLEANO        shift and go to state 114
    FLOTANTE        shift and go to state 115
    ENTERO          shift and go to state 116
    DOLAR           shift and go to state 25
    CADENA          shift and go to state 21

    sentencias                     shift and go to state 106
    impresionPrint                 shift and go to state 107
    impresionEcho                  shift and go to state 108
    operacionesL                   shift and go to state 109
    operacionesA                   shift and go to state 110
    operacionesC                   shift and go to state 111
    asignacion                     shift and go to state 112
    valores                        shift and go to state 79
    opLog                          shift and go to state 29
    operacionesV                   shift and go to state 28
    variable                       shift and go to state 113
    valor                          shift and go to state 82

state 64

    (89) metodosArray -> rsort PARENIZQ . variable PARENDER PUNTOYCOMA
    (90) metodosArray -> rsort PARENIZQ . crearArreglos PARENDER PUNTOYCOMA
    (25) variable -> . DOLAR IDENTIFICADOR
    (86) crearArreglos -> . variable OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA

    DOLAR           shift and go to state 25

    variable                       shift and go to state 117
    crearArreglos                  shift and go to state 118

state 65

    (91) metodosArray -> count PARENIZQ . variable PARENDER PUNTOYCOMA
    (92) metodosArray -> count PARENIZQ . crearArreglos PARENDER PUNTOYCOMA
    (25) variable -> . DOLAR IDENTIFICADOR
    (86) crearArreglos -> . variable OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA

    DOLAR           shift and go to state 25

    variable                       shift and go to state 119
    crearArreglos                  shift and go to state 120

state 66

    (45) operadoresC -> OPERLOGICO_NOT OPERASIGNACION .

    $end            reduce using rule 45 (operadoresC -> OPERLOGICO_NOT OPERASIGNACION .)
    CADENA          reduce using rule 45 (operadoresC -> OPERLOGICO_NOT OPERASIGNACION .)
    ENTERO          reduce using rule 45 (operadoresC -> OPERLOGICO_NOT OPERASIGNACION .)
    FLOTANTE        reduce using rule 45 (operadoresC -> OPERLOGICO_NOT OPERASIGNACION .)
    BOOLEANO        reduce using rule 45 (operadoresC -> OPERLOGICO_NOT OPERASIGNACION .)
    DOLAR           reduce using rule 45 (operadoresC -> OPERLOGICO_NOT OPERASIGNACION .)


state 67

    (47) operadoresC -> OPERLOGICO_NOT OPERCOMPARACION .

    $end            reduce using rule 47 (operadoresC -> OPERLOGICO_NOT OPERCOMPARACION .)
    CADENA          reduce using rule 47 (operadoresC -> OPERLOGICO_NOT OPERCOMPARACION .)
    ENTERO          reduce using rule 47 (operadoresC -> OPERLOGICO_NOT OPERCOMPARACION .)
    FLOTANTE        reduce using rule 47 (operadoresC -> OPERLOGICO_NOT OPERCOMPARACION .)
    BOOLEANO        reduce using rule 47 (operadoresC -> OPERLOGICO_NOT OPERCOMPARACION .)
    DOLAR           reduce using rule 47 (operadoresC -> OPERLOGICO_NOT OPERCOMPARACION .)


state 68

    (58) opLogicos -> AMPERSAND AMPERSAND .

    $end            reduce using rule 58 (opLogicos -> AMPERSAND AMPERSAND .)
    BOOLEANO        reduce using rule 58 (opLogicos -> AMPERSAND AMPERSAND .)
    DOLAR           reduce using rule 58 (opLogicos -> AMPERSAND AMPERSAND .)


state 69

    (44) operadoresC -> OPERCOMPARACION OPERASIGNACION .

    $end            reduce using rule 44 (operadoresC -> OPERCOMPARACION OPERASIGNACION .)
    CADENA          reduce using rule 44 (operadoresC -> OPERCOMPARACION OPERASIGNACION .)
    ENTERO          reduce using rule 44 (operadoresC -> OPERCOMPARACION OPERASIGNACION .)
    FLOTANTE        reduce using rule 44 (operadoresC -> OPERCOMPARACION OPERASIGNACION .)
    BOOLEANO        reduce using rule 44 (operadoresC -> OPERCOMPARACION OPERASIGNACION .)
    DOLAR           reduce using rule 44 (operadoresC -> OPERCOMPARACION OPERASIGNACION .)


state 70

    (46) operadoresC -> MENORQUE MAYORQUE .

    $end            reduce using rule 46 (operadoresC -> MENORQUE MAYORQUE .)
    CADENA          reduce using rule 46 (operadoresC -> MENORQUE MAYORQUE .)
    ENTERO          reduce using rule 46 (operadoresC -> MENORQUE MAYORQUE .)
    FLOTANTE        reduce using rule 46 (operadoresC -> MENORQUE MAYORQUE .)
    BOOLEANO        reduce using rule 46 (operadoresC -> MENORQUE MAYORQUE .)
    DOLAR           reduce using rule 46 (operadoresC -> MENORQUE MAYORQUE .)


state 71

    (50) operadoresC -> MENORQUE OPERASIGNACION .
    (52) operadoresC -> MENORQUE OPERASIGNACION . MAYORQUE

    $end            reduce using rule 50 (operadoresC -> MENORQUE OPERASIGNACION .)
    CADENA          reduce using rule 50 (operadoresC -> MENORQUE OPERASIGNACION .)
    ENTERO          reduce using rule 50 (operadoresC -> MENORQUE OPERASIGNACION .)
    FLOTANTE        reduce using rule 50 (operadoresC -> MENORQUE OPERASIGNACION .)
    BOOLEANO        reduce using rule 50 (operadoresC -> MENORQUE OPERASIGNACION .)
    DOLAR           reduce using rule 50 (operadoresC -> MENORQUE OPERASIGNACION .)
    MAYORQUE        shift and go to state 121


state 72

    (51) operadoresC -> MAYORQUE OPERASIGNACION .

    $end            reduce using rule 51 (operadoresC -> MAYORQUE OPERASIGNACION .)
    CADENA          reduce using rule 51 (operadoresC -> MAYORQUE OPERASIGNACION .)
    ENTERO          reduce using rule 51 (operadoresC -> MAYORQUE OPERASIGNACION .)
    FLOTANTE        reduce using rule 51 (operadoresC -> MAYORQUE OPERASIGNACION .)
    BOOLEANO        reduce using rule 51 (operadoresC -> MAYORQUE OPERASIGNACION .)
    DOLAR           reduce using rule 51 (operadoresC -> MAYORQUE OPERASIGNACION .)


state 73

    (30) operacionesV -> variable .
    (32) opLog -> variable .
    (27) valores -> variable .

  ! reduce/reduce conflict for OPERLOGICO_NOT resolved using rule 27 (valores -> variable .)
    SUMA            reduce using rule 30 (operacionesV -> variable .)
    RESTA           reduce using rule 30 (operacionesV -> variable .)
    MULTIPLICACION  reduce using rule 30 (operacionesV -> variable .)
    DIVISION        reduce using rule 30 (operacionesV -> variable .)
    MODULO          reduce using rule 30 (operacionesV -> variable .)
    EXPONENCIACION  reduce using rule 30 (operacionesV -> variable .)
    OPERLOGICO_AND  reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OR   reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_XOR  reduce using rule 32 (opLog -> variable .)
    AMPERSAND       reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OREXCLUSIVO reduce using rule 32 (opLog -> variable .)
    OPERCOMPARACION reduce using rule 27 (valores -> variable .)
    OPERLOGICO_NOT  reduce using rule 27 (valores -> variable .)
    MENORQUE        reduce using rule 27 (valores -> variable .)
    MAYORQUE        reduce using rule 27 (valores -> variable .)

  ! OPERLOGICO_NOT  [ reduce using rule 32 (opLog -> variable .) ]


state 74

    (34) asignacion -> variable OPERASIGNACION valor . PUNTOYCOMA
    (26) valores -> valor .

    PUNTOYCOMA      shift and go to state 122
    OPERCOMPARACION reduce using rule 26 (valores -> valor .)
    OPERLOGICO_NOT  reduce using rule 26 (valores -> valor .)
    MENORQUE        reduce using rule 26 (valores -> valor .)
    MAYORQUE        reduce using rule 26 (valores -> valor .)


state 75

    (66) opCombinadas -> variable OPERASIGNACION operacionesA .

    $end            reduce using rule 66 (opCombinadas -> variable OPERASIGNACION operacionesA .)


state 76

    (67) opCombinadas -> variable OPERASIGNACION operacionesL .

    $end            reduce using rule 67 (opCombinadas -> variable OPERASIGNACION operacionesL .)


state 77

    (68) opCombinadas -> variable OPERASIGNACION operacionesC .

    $end            reduce using rule 68 (opCombinadas -> variable OPERASIGNACION operacionesC .)


state 78

    (86) crearArreglos -> variable OPERASIGNACION array . PARENIZQ rellenoArray PARENDER PUNTOYCOMA

    PARENIZQ        shift and go to state 123


state 79

    (53) operacionesC -> valores . operadoresC valores
    (43) operadoresC -> . OPERCOMPARACION
    (44) operadoresC -> . OPERCOMPARACION OPERASIGNACION
    (45) operadoresC -> . OPERLOGICO_NOT OPERASIGNACION
    (46) operadoresC -> . MENORQUE MAYORQUE
    (47) operadoresC -> . OPERLOGICO_NOT OPERCOMPARACION
    (48) operadoresC -> . MENORQUE
    (49) operadoresC -> . MAYORQUE
    (50) operadoresC -> . MENORQUE OPERASIGNACION
    (51) operadoresC -> . MAYORQUE OPERASIGNACION
    (52) operadoresC -> . MENORQUE OPERASIGNACION MAYORQUE

    OPERCOMPARACION shift and go to state 46
    OPERLOGICO_NOT  shift and go to state 52
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48

    operadoresC                    shift and go to state 51

state 80

    (87) bucleForEach -> variable IDENTIFICADOR variable . LLAVEIZQ sentencias LLAVEDER
    (88) bucleForEach -> variable IDENTIFICADOR variable . OPERASIG_ARRAY variable LLAVEIZQ sentencias LLAVEDER

    LLAVEIZQ        shift and go to state 124
    OPERASIG_ARRAY  shift and go to state 125


state 81

    (53) operacionesC -> valores operadoresC valores .

    PUNTOYCOMA      reduce using rule 53 (operacionesC -> valores operadoresC valores .)
    $end            reduce using rule 53 (operacionesC -> valores operadoresC valores .)
    PARENDER        reduce using rule 53 (operacionesC -> valores operadoresC valores .)


state 82

    (26) valores -> valor .

    PUNTOYCOMA      reduce using rule 26 (valores -> valor .)
    $end            reduce using rule 26 (valores -> valor .)
    PARENDER        reduce using rule 26 (valores -> valor .)
    OPERCOMPARACION reduce using rule 26 (valores -> valor .)
    OPERLOGICO_NOT  reduce using rule 26 (valores -> valor .)
    MENORQUE        reduce using rule 26 (valores -> valor .)
    MAYORQUE        reduce using rule 26 (valores -> valor .)
    OPERASIG_ARRAY  reduce using rule 26 (valores -> valor .)
    COMA            reduce using rule 26 (valores -> valor .)


state 83

    (27) valores -> variable .

    PUNTOYCOMA      reduce using rule 27 (valores -> variable .)
    $end            reduce using rule 27 (valores -> variable .)
    PARENDER        reduce using rule 27 (valores -> variable .)
    OPERASIG_ARRAY  reduce using rule 27 (valores -> variable .)
    COMA            reduce using rule 27 (valores -> variable .)


state 84

    (22) valor -> ENTERO .

    PUNTOYCOMA      reduce using rule 22 (valor -> ENTERO .)
    $end            reduce using rule 22 (valor -> ENTERO .)
    PARENDER        reduce using rule 22 (valor -> ENTERO .)
    OPERCOMPARACION reduce using rule 22 (valor -> ENTERO .)
    OPERLOGICO_NOT  reduce using rule 22 (valor -> ENTERO .)
    MENORQUE        reduce using rule 22 (valor -> ENTERO .)
    MAYORQUE        reduce using rule 22 (valor -> ENTERO .)
    OPERASIG_ARRAY  reduce using rule 22 (valor -> ENTERO .)
    COMA            reduce using rule 22 (valor -> ENTERO .)


state 85

    (23) valor -> FLOTANTE .

    PUNTOYCOMA      reduce using rule 23 (valor -> FLOTANTE .)
    $end            reduce using rule 23 (valor -> FLOTANTE .)
    PARENDER        reduce using rule 23 (valor -> FLOTANTE .)
    OPERCOMPARACION reduce using rule 23 (valor -> FLOTANTE .)
    OPERLOGICO_NOT  reduce using rule 23 (valor -> FLOTANTE .)
    MENORQUE        reduce using rule 23 (valor -> FLOTANTE .)
    MAYORQUE        reduce using rule 23 (valor -> FLOTANTE .)
    OPERASIG_ARRAY  reduce using rule 23 (valor -> FLOTANTE .)
    COMA            reduce using rule 23 (valor -> FLOTANTE .)


state 86

    (24) valor -> BOOLEANO .

    PUNTOYCOMA      reduce using rule 24 (valor -> BOOLEANO .)
    $end            reduce using rule 24 (valor -> BOOLEANO .)
    PARENDER        reduce using rule 24 (valor -> BOOLEANO .)
    OPERASIG_ARRAY  reduce using rule 24 (valor -> BOOLEANO .)
    COMA            reduce using rule 24 (valor -> BOOLEANO .)


state 87

    (33) impresionEcho -> echo CADENA PUNTOYCOMA .

    $end            reduce using rule 33 (impresionEcho -> echo CADENA PUNTOYCOMA .)
    LLAVEDER        reduce using rule 33 (impresionEcho -> echo CADENA PUNTOYCOMA .)


state 88

    (69) impresionPrint -> print PARENIZQ valores . PARENDER PUNTOYCOMA
    (53) operacionesC -> valores . operadoresC valores
    (43) operadoresC -> . OPERCOMPARACION
    (44) operadoresC -> . OPERCOMPARACION OPERASIGNACION
    (45) operadoresC -> . OPERLOGICO_NOT OPERASIGNACION
    (46) operadoresC -> . MENORQUE MAYORQUE
    (47) operadoresC -> . OPERLOGICO_NOT OPERCOMPARACION
    (48) operadoresC -> . MENORQUE
    (49) operadoresC -> . MAYORQUE
    (50) operadoresC -> . MENORQUE OPERASIGNACION
    (51) operadoresC -> . MAYORQUE OPERASIGNACION
    (52) operadoresC -> . MENORQUE OPERASIGNACION MAYORQUE

    PARENDER        shift and go to state 126
    OPERCOMPARACION shift and go to state 46
    OPERLOGICO_NOT  shift and go to state 52
    MENORQUE        shift and go to state 47
    MAYORQUE        shift and go to state 48

    operadoresC                    shift and go to state 51

state 89

    (70) impresionPrint -> print PARENIZQ operacionesL . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 127


state 90

    (71) impresionPrint -> print PARENIZQ operacionesC . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 128


state 91

    (72) impresionPrint -> print PARENIZQ operacionesA . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 129


state 92

    (27) valores -> variable .
    (32) opLog -> variable .
    (30) operacionesV -> variable .

  ! reduce/reduce conflict for OPERLOGICO_NOT resolved using rule 27 (valores -> variable .)
    PARENDER        reduce using rule 27 (valores -> variable .)
    OPERCOMPARACION reduce using rule 27 (valores -> variable .)
    OPERLOGICO_NOT  reduce using rule 27 (valores -> variable .)
    MENORQUE        reduce using rule 27 (valores -> variable .)
    MAYORQUE        reduce using rule 27 (valores -> variable .)
    OPERLOGICO_AND  reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OR   reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_XOR  reduce using rule 32 (opLog -> variable .)
    AMPERSAND       reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OREXCLUSIVO reduce using rule 32 (opLog -> variable .)
    SUMA            reduce using rule 30 (operacionesV -> variable .)
    RESTA           reduce using rule 30 (operacionesV -> variable .)
    MULTIPLICACION  reduce using rule 30 (operacionesV -> variable .)
    DIVISION        reduce using rule 30 (operacionesV -> variable .)
    MODULO          reduce using rule 30 (operacionesV -> variable .)
    EXPONENCIACION  reduce using rule 30 (operacionesV -> variable .)

  ! OPERLOGICO_NOT  [ reduce using rule 32 (opLog -> variable .) ]


state 93

    (41) operacionesA -> operacionesV operadoresA operacionesV .
    (41) operacionesA -> operacionesV . operadoresA operacionesV
    (42) operacionesA -> operacionesV . operadoresA operacionesA
    (35) operadoresA -> . SUMA
    (36) operadoresA -> . RESTA
    (37) operadoresA -> . MULTIPLICACION
    (38) operadoresA -> . DIVISION
    (39) operadoresA -> . MODULO
    (40) operadoresA -> . EXPONENCIACION

    PUNTOYCOMA      reduce using rule 41 (operacionesA -> operacionesV operadoresA operacionesV .)
    $end            reduce using rule 41 (operacionesA -> operacionesV operadoresA operacionesV .)
    PARENDER        reduce using rule 41 (operacionesA -> operacionesV operadoresA operacionesV .)
    SUMA            shift and go to state 40
    RESTA           shift and go to state 41
    MULTIPLICACION  shift and go to state 42
    DIVISION        shift and go to state 43
    MODULO          shift and go to state 44
    EXPONENCIACION  shift and go to state 45

    operadoresA                    shift and go to state 59

state 94

    (42) operacionesA -> operacionesV operadoresA operacionesA .

    PUNTOYCOMA      reduce using rule 42 (operacionesA -> operacionesV operadoresA operacionesA .)
    $end            reduce using rule 42 (operacionesA -> operacionesV operadoresA operacionesA .)
    PARENDER        reduce using rule 42 (operacionesA -> operacionesV operadoresA operacionesA .)


state 95

    (28) operacionesV -> FLOTANTE .

    SUMA            reduce using rule 28 (operacionesV -> FLOTANTE .)
    RESTA           reduce using rule 28 (operacionesV -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 28 (operacionesV -> FLOTANTE .)
    DIVISION        reduce using rule 28 (operacionesV -> FLOTANTE .)
    MODULO          reduce using rule 28 (operacionesV -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 28 (operacionesV -> FLOTANTE .)
    PUNTOYCOMA      reduce using rule 28 (operacionesV -> FLOTANTE .)
    $end            reduce using rule 28 (operacionesV -> FLOTANTE .)
    PARENDER        reduce using rule 28 (operacionesV -> FLOTANTE .)


state 96

    (29) operacionesV -> ENTERO .

    SUMA            reduce using rule 29 (operacionesV -> ENTERO .)
    RESTA           reduce using rule 29 (operacionesV -> ENTERO .)
    MULTIPLICACION  reduce using rule 29 (operacionesV -> ENTERO .)
    DIVISION        reduce using rule 29 (operacionesV -> ENTERO .)
    MODULO          reduce using rule 29 (operacionesV -> ENTERO .)
    EXPONENCIACION  reduce using rule 29 (operacionesV -> ENTERO .)
    PUNTOYCOMA      reduce using rule 29 (operacionesV -> ENTERO .)
    $end            reduce using rule 29 (operacionesV -> ENTERO .)
    PARENDER        reduce using rule 29 (operacionesV -> ENTERO .)


state 97

    (30) operacionesV -> variable .

    SUMA            reduce using rule 30 (operacionesV -> variable .)
    RESTA           reduce using rule 30 (operacionesV -> variable .)
    MULTIPLICACION  reduce using rule 30 (operacionesV -> variable .)
    DIVISION        reduce using rule 30 (operacionesV -> variable .)
    MODULO          reduce using rule 30 (operacionesV -> variable .)
    EXPONENCIACION  reduce using rule 30 (operacionesV -> variable .)
    PUNTOYCOMA      reduce using rule 30 (operacionesV -> variable .)
    $end            reduce using rule 30 (operacionesV -> variable .)
    PARENDER        reduce using rule 30 (operacionesV -> variable .)


state 98

    (60) operacionesL -> opLog opLogicos opLog .

    PUNTOYCOMA      reduce using rule 60 (operacionesL -> opLog opLogicos opLog .)
    $end            reduce using rule 60 (operacionesL -> opLog opLogicos opLog .)
    PARENDER        reduce using rule 60 (operacionesL -> opLog opLogicos opLog .)


state 99

    (31) opLog -> BOOLEANO .

    PUNTOYCOMA      reduce using rule 31 (opLog -> BOOLEANO .)
    $end            reduce using rule 31 (opLog -> BOOLEANO .)
    PARENDER        reduce using rule 31 (opLog -> BOOLEANO .)


state 100

    (32) opLog -> variable .

    PUNTOYCOMA      reduce using rule 32 (opLog -> variable .)
    $end            reduce using rule 32 (opLog -> variable .)
    PARENDER        reduce using rule 32 (opLog -> variable .)


state 101

    (76) condIf -> if PARENIZQ retornoBool . PARENDER PUNTOYCOMA
    (77) condIf -> if PARENIZQ retornoBool . PARENDER LLAVEIZQ sentencias LLAVEDER
    (78) condIf -> if PARENIZQ retornoBool . PARENDER LLAVEIZQ impresionPrint LLAVEDER
    (79) condIf -> if PARENIZQ retornoBool . PARENDER LLAVEIZQ impresionEcho LLAVEDER

    PARENDER        shift and go to state 130


state 102

    (73) retornoBool -> BOOLEANO .
    (31) opLog -> BOOLEANO .
    (24) valor -> BOOLEANO .

  ! reduce/reduce conflict for OPERLOGICO_NOT resolved using rule 24 (valor -> BOOLEANO .)
    PARENDER        reduce using rule 73 (retornoBool -> BOOLEANO .)
    OPERLOGICO_AND  reduce using rule 31 (opLog -> BOOLEANO .)
    OPERLOGICO_OR   reduce using rule 31 (opLog -> BOOLEANO .)
    OPERLOGICO_XOR  reduce using rule 31 (opLog -> BOOLEANO .)
    AMPERSAND       reduce using rule 31 (opLog -> BOOLEANO .)
    OPERLOGICO_OREXCLUSIVO reduce using rule 31 (opLog -> BOOLEANO .)
    OPERCOMPARACION reduce using rule 24 (valor -> BOOLEANO .)
    OPERLOGICO_NOT  reduce using rule 24 (valor -> BOOLEANO .)
    MENORQUE        reduce using rule 24 (valor -> BOOLEANO .)
    MAYORQUE        reduce using rule 24 (valor -> BOOLEANO .)

  ! OPERLOGICO_NOT  [ reduce using rule 31 (opLog -> BOOLEANO .) ]


state 103

    (74) retornoBool -> operacionesL .

    PARENDER        reduce using rule 74 (retornoBool -> operacionesL .)


state 104

    (75) retornoBool -> operacionesC .

    PARENDER        reduce using rule 75 (retornoBool -> operacionesC .)


state 105

    (32) opLog -> variable .
    (27) valores -> variable .

  ! reduce/reduce conflict for OPERLOGICO_NOT resolved using rule 27 (valores -> variable .)
    OPERLOGICO_AND  reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OR   reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_XOR  reduce using rule 32 (opLog -> variable .)
    AMPERSAND       reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OREXCLUSIVO reduce using rule 32 (opLog -> variable .)
    OPERCOMPARACION reduce using rule 27 (valores -> variable .)
    OPERLOGICO_NOT  reduce using rule 27 (valores -> variable .)
    MENORQUE        reduce using rule 27 (valores -> variable .)
    MAYORQUE        reduce using rule 27 (valores -> variable .)

  ! OPERLOGICO_NOT  [ reduce using rule 32 (opLog -> variable .) ]


state 106

    (80) bucleDoWhile -> do LLAVEIZQ sentencias . LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA
    (65) sentencias -> sentencias .

  ! shift/reduce conflict for LLAVEDER resolved as shift
    LLAVEDER        shift and go to state 131

  ! LLAVEDER        [ reduce using rule 65 (sentencias -> sentencias .) ]


state 107

    (81) bucleDoWhile -> do LLAVEIZQ impresionPrint . LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA

    LLAVEDER        shift and go to state 132


state 108

    (82) bucleDoWhile -> do LLAVEIZQ impresionEcho . LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA

    LLAVEDER        shift and go to state 133


state 109

    (61) sentencias -> operacionesL . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 55


state 110

    (62) sentencias -> operacionesA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 53


state 111

    (63) sentencias -> operacionesC . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 54


state 112

    (64) sentencias -> asignacion .

    LLAVEDER        reduce using rule 64 (sentencias -> asignacion .)


state 113

    (34) asignacion -> variable . OPERASIGNACION valor PUNTOYCOMA
    (32) opLog -> variable .
    (30) operacionesV -> variable .
    (27) valores -> variable .

  ! reduce/reduce conflict for OPERLOGICO_NOT resolved using rule 27 (valores -> variable .)
    OPERASIGNACION  shift and go to state 134
    OPERLOGICO_AND  reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OR   reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_XOR  reduce using rule 32 (opLog -> variable .)
    AMPERSAND       reduce using rule 32 (opLog -> variable .)
    OPERLOGICO_OREXCLUSIVO reduce using rule 32 (opLog -> variable .)
    SUMA            reduce using rule 30 (operacionesV -> variable .)
    RESTA           reduce using rule 30 (operacionesV -> variable .)
    MULTIPLICACION  reduce using rule 30 (operacionesV -> variable .)
    DIVISION        reduce using rule 30 (operacionesV -> variable .)
    MODULO          reduce using rule 30 (operacionesV -> variable .)
    EXPONENCIACION  reduce using rule 30 (operacionesV -> variable .)
    OPERCOMPARACION reduce using rule 27 (valores -> variable .)
    OPERLOGICO_NOT  reduce using rule 27 (valores -> variable .)
    MENORQUE        reduce using rule 27 (valores -> variable .)
    MAYORQUE        reduce using rule 27 (valores -> variable .)

  ! OPERLOGICO_NOT  [ reduce using rule 32 (opLog -> variable .) ]


state 114

    (31) opLog -> BOOLEANO .
    (24) valor -> BOOLEANO .

  ! reduce/reduce conflict for OPERLOGICO_NOT resolved using rule 24 (valor -> BOOLEANO .)
    OPERLOGICO_AND  reduce using rule 31 (opLog -> BOOLEANO .)
    OPERLOGICO_OR   reduce using rule 31 (opLog -> BOOLEANO .)
    OPERLOGICO_XOR  reduce using rule 31 (opLog -> BOOLEANO .)
    AMPERSAND       reduce using rule 31 (opLog -> BOOLEANO .)
    OPERLOGICO_OREXCLUSIVO reduce using rule 31 (opLog -> BOOLEANO .)
    OPERCOMPARACION reduce using rule 24 (valor -> BOOLEANO .)
    OPERLOGICO_NOT  reduce using rule 24 (valor -> BOOLEANO .)
    MENORQUE        reduce using rule 24 (valor -> BOOLEANO .)
    MAYORQUE        reduce using rule 24 (valor -> BOOLEANO .)

  ! OPERLOGICO_NOT  [ reduce using rule 31 (opLog -> BOOLEANO .) ]


state 115

    (28) operacionesV -> FLOTANTE .
    (23) valor -> FLOTANTE .

    SUMA            reduce using rule 28 (operacionesV -> FLOTANTE .)
    RESTA           reduce using rule 28 (operacionesV -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 28 (operacionesV -> FLOTANTE .)
    DIVISION        reduce using rule 28 (operacionesV -> FLOTANTE .)
    MODULO          reduce using rule 28 (operacionesV -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 28 (operacionesV -> FLOTANTE .)
    OPERCOMPARACION reduce using rule 23 (valor -> FLOTANTE .)
    OPERLOGICO_NOT  reduce using rule 23 (valor -> FLOTANTE .)
    MENORQUE        reduce using rule 23 (valor -> FLOTANTE .)
    MAYORQUE        reduce using rule 23 (valor -> FLOTANTE .)


state 116

    (29) operacionesV -> ENTERO .
    (22) valor -> ENTERO .

    SUMA            reduce using rule 29 (operacionesV -> ENTERO .)
    RESTA           reduce using rule 29 (operacionesV -> ENTERO .)
    MULTIPLICACION  reduce using rule 29 (operacionesV -> ENTERO .)
    DIVISION        reduce using rule 29 (operacionesV -> ENTERO .)
    MODULO          reduce using rule 29 (operacionesV -> ENTERO .)
    EXPONENCIACION  reduce using rule 29 (operacionesV -> ENTERO .)
    OPERCOMPARACION reduce using rule 22 (valor -> ENTERO .)
    OPERLOGICO_NOT  reduce using rule 22 (valor -> ENTERO .)
    MENORQUE        reduce using rule 22 (valor -> ENTERO .)
    MAYORQUE        reduce using rule 22 (valor -> ENTERO .)


state 117

    (89) metodosArray -> rsort PARENIZQ variable . PARENDER PUNTOYCOMA
    (86) crearArreglos -> variable . OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 135
    OPERASIGNACION  shift and go to state 136


state 118

    (90) metodosArray -> rsort PARENIZQ crearArreglos . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 137


state 119

    (91) metodosArray -> count PARENIZQ variable . PARENDER PUNTOYCOMA
    (86) crearArreglos -> variable . OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 138
    OPERASIGNACION  shift and go to state 136


state 120

    (92) metodosArray -> count PARENIZQ crearArreglos . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 139


state 121

    (52) operadoresC -> MENORQUE OPERASIGNACION MAYORQUE .

    $end            reduce using rule 52 (operadoresC -> MENORQUE OPERASIGNACION MAYORQUE .)
    CADENA          reduce using rule 52 (operadoresC -> MENORQUE OPERASIGNACION MAYORQUE .)
    ENTERO          reduce using rule 52 (operadoresC -> MENORQUE OPERASIGNACION MAYORQUE .)
    FLOTANTE        reduce using rule 52 (operadoresC -> MENORQUE OPERASIGNACION MAYORQUE .)
    BOOLEANO        reduce using rule 52 (operadoresC -> MENORQUE OPERASIGNACION MAYORQUE .)
    DOLAR           reduce using rule 52 (operadoresC -> MENORQUE OPERASIGNACION MAYORQUE .)


state 122

    (34) asignacion -> variable OPERASIGNACION valor PUNTOYCOMA .

    $end            reduce using rule 34 (asignacion -> variable OPERASIGNACION valor PUNTOYCOMA .)
    LLAVEDER        reduce using rule 34 (asignacion -> variable OPERASIGNACION valor PUNTOYCOMA .)


state 123

    (86) crearArreglos -> variable OPERASIGNACION array PARENIZQ . rellenoArray PARENDER PUNTOYCOMA
    (83) rellenoArray -> . valores OPERASIG_ARRAY valores COMA
    (84) rellenoArray -> . valores
    (85) rellenoArray -> . COMA valores OPERASIG_ARRAY valores COMA rellenoArray
    (26) valores -> . valor
    (27) valores -> . variable
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO
    (25) variable -> . DOLAR IDENTIFICADOR

    COMA            shift and go to state 142
    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85
    BOOLEANO        shift and go to state 86
    DOLAR           shift and go to state 25

    variable                       shift and go to state 83
    rellenoArray                   shift and go to state 140
    valores                        shift and go to state 141
    valor                          shift and go to state 82

state 124

    (87) bucleForEach -> variable IDENTIFICADOR variable LLAVEIZQ . sentencias LLAVEDER
    (61) sentencias -> . operacionesL PUNTOYCOMA
    (62) sentencias -> . operacionesA PUNTOYCOMA
    (63) sentencias -> . operacionesC PUNTOYCOMA
    (64) sentencias -> . asignacion
    (65) sentencias -> . sentencias
    (60) operacionesL -> . opLog opLogicos opLog
    (41) operacionesA -> . operacionesV operadoresA operacionesV
    (42) operacionesA -> . operacionesV operadoresA operacionesA
    (53) operacionesC -> . valores operadoresC valores
    (34) asignacion -> . variable OPERASIGNACION valor PUNTOYCOMA
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (28) operacionesV -> . FLOTANTE
    (29) operacionesV -> . ENTERO
    (30) operacionesV -> . variable
    (26) valores -> . valor
    (27) valores -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO

    BOOLEANO        shift and go to state 114
    FLOTANTE        shift and go to state 115
    ENTERO          shift and go to state 116
    DOLAR           shift and go to state 25
    CADENA          shift and go to state 21

    variable                       shift and go to state 113
    sentencias                     shift and go to state 143
    operacionesL                   shift and go to state 109
    operacionesA                   shift and go to state 110
    operacionesC                   shift and go to state 111
    asignacion                     shift and go to state 112
    opLog                          shift and go to state 29
    operacionesV                   shift and go to state 28
    valores                        shift and go to state 79
    valor                          shift and go to state 82

state 125

    (88) bucleForEach -> variable IDENTIFICADOR variable OPERASIG_ARRAY . variable LLAVEIZQ sentencias LLAVEDER
    (25) variable -> . DOLAR IDENTIFICADOR

    DOLAR           shift and go to state 25

    variable                       shift and go to state 144

state 126

    (69) impresionPrint -> print PARENIZQ valores PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 145


state 127

    (70) impresionPrint -> print PARENIZQ operacionesL PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 146


state 128

    (71) impresionPrint -> print PARENIZQ operacionesC PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 147


state 129

    (72) impresionPrint -> print PARENIZQ operacionesA PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 148


state 130

    (76) condIf -> if PARENIZQ retornoBool PARENDER . PUNTOYCOMA
    (77) condIf -> if PARENIZQ retornoBool PARENDER . LLAVEIZQ sentencias LLAVEDER
    (78) condIf -> if PARENIZQ retornoBool PARENDER . LLAVEIZQ impresionPrint LLAVEDER
    (79) condIf -> if PARENIZQ retornoBool PARENDER . LLAVEIZQ impresionEcho LLAVEDER

    PUNTOYCOMA      shift and go to state 149
    LLAVEIZQ        shift and go to state 150


state 131

    (80) bucleDoWhile -> do LLAVEIZQ sentencias LLAVEDER . while PARENIZQ retornoBool PARENDER PUNTOYCOMA

    while           shift and go to state 151


state 132

    (81) bucleDoWhile -> do LLAVEIZQ impresionPrint LLAVEDER . while PARENIZQ retornoBool PARENDER PUNTOYCOMA

    while           shift and go to state 152


state 133

    (82) bucleDoWhile -> do LLAVEIZQ impresionEcho LLAVEDER . while PARENIZQ retornoBool PARENDER PUNTOYCOMA

    while           shift and go to state 153


state 134

    (34) asignacion -> variable OPERASIGNACION . valor PUNTOYCOMA
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO

    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85
    BOOLEANO        shift and go to state 86

    valor                          shift and go to state 154

state 135

    (89) metodosArray -> rsort PARENIZQ variable PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 155


state 136

    (86) crearArreglos -> variable OPERASIGNACION . array PARENIZQ rellenoArray PARENDER PUNTOYCOMA

    array           shift and go to state 78


state 137

    (90) metodosArray -> rsort PARENIZQ crearArreglos PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 156


state 138

    (91) metodosArray -> count PARENIZQ variable PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 157


state 139

    (92) metodosArray -> count PARENIZQ crearArreglos PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 158


state 140

    (86) crearArreglos -> variable OPERASIGNACION array PARENIZQ rellenoArray . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 159


state 141

    (83) rellenoArray -> valores . OPERASIG_ARRAY valores COMA
    (84) rellenoArray -> valores .

    OPERASIG_ARRAY  shift and go to state 160
    PARENDER        reduce using rule 84 (rellenoArray -> valores .)


state 142

    (85) rellenoArray -> COMA . valores OPERASIG_ARRAY valores COMA rellenoArray
    (26) valores -> . valor
    (27) valores -> . variable
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO
    (25) variable -> . DOLAR IDENTIFICADOR

    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85
    BOOLEANO        shift and go to state 86
    DOLAR           shift and go to state 25

    valores                        shift and go to state 161
    valor                          shift and go to state 82
    variable                       shift and go to state 83

state 143

    (87) bucleForEach -> variable IDENTIFICADOR variable LLAVEIZQ sentencias . LLAVEDER
    (65) sentencias -> sentencias .

  ! shift/reduce conflict for LLAVEDER resolved as shift
    LLAVEDER        shift and go to state 162

  ! LLAVEDER        [ reduce using rule 65 (sentencias -> sentencias .) ]


state 144

    (88) bucleForEach -> variable IDENTIFICADOR variable OPERASIG_ARRAY variable . LLAVEIZQ sentencias LLAVEDER

    LLAVEIZQ        shift and go to state 163


state 145

    (69) impresionPrint -> print PARENIZQ valores PARENDER PUNTOYCOMA .

    $end            reduce using rule 69 (impresionPrint -> print PARENIZQ valores PARENDER PUNTOYCOMA .)
    LLAVEDER        reduce using rule 69 (impresionPrint -> print PARENIZQ valores PARENDER PUNTOYCOMA .)


state 146

    (70) impresionPrint -> print PARENIZQ operacionesL PARENDER PUNTOYCOMA .

    $end            reduce using rule 70 (impresionPrint -> print PARENIZQ operacionesL PARENDER PUNTOYCOMA .)
    LLAVEDER        reduce using rule 70 (impresionPrint -> print PARENIZQ operacionesL PARENDER PUNTOYCOMA .)


state 147

    (71) impresionPrint -> print PARENIZQ operacionesC PARENDER PUNTOYCOMA .

    $end            reduce using rule 71 (impresionPrint -> print PARENIZQ operacionesC PARENDER PUNTOYCOMA .)
    LLAVEDER        reduce using rule 71 (impresionPrint -> print PARENIZQ operacionesC PARENDER PUNTOYCOMA .)


state 148

    (72) impresionPrint -> print PARENIZQ operacionesA PARENDER PUNTOYCOMA .

    $end            reduce using rule 72 (impresionPrint -> print PARENIZQ operacionesA PARENDER PUNTOYCOMA .)
    LLAVEDER        reduce using rule 72 (impresionPrint -> print PARENIZQ operacionesA PARENDER PUNTOYCOMA .)


state 149

    (76) condIf -> if PARENIZQ retornoBool PARENDER PUNTOYCOMA .

    $end            reduce using rule 76 (condIf -> if PARENIZQ retornoBool PARENDER PUNTOYCOMA .)


state 150

    (77) condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ . sentencias LLAVEDER
    (78) condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ . impresionPrint LLAVEDER
    (79) condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ . impresionEcho LLAVEDER
    (61) sentencias -> . operacionesL PUNTOYCOMA
    (62) sentencias -> . operacionesA PUNTOYCOMA
    (63) sentencias -> . operacionesC PUNTOYCOMA
    (64) sentencias -> . asignacion
    (65) sentencias -> . sentencias
    (69) impresionPrint -> . print PARENIZQ valores PARENDER PUNTOYCOMA
    (70) impresionPrint -> . print PARENIZQ operacionesL PARENDER PUNTOYCOMA
    (71) impresionPrint -> . print PARENIZQ operacionesC PARENDER PUNTOYCOMA
    (72) impresionPrint -> . print PARENIZQ operacionesA PARENDER PUNTOYCOMA
    (33) impresionEcho -> . echo CADENA PUNTOYCOMA
    (60) operacionesL -> . opLog opLogicos opLog
    (41) operacionesA -> . operacionesV operadoresA operacionesV
    (42) operacionesA -> . operacionesV operadoresA operacionesA
    (53) operacionesC -> . valores operadoresC valores
    (34) asignacion -> . variable OPERASIGNACION valor PUNTOYCOMA
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (28) operacionesV -> . FLOTANTE
    (29) operacionesV -> . ENTERO
    (30) operacionesV -> . variable
    (26) valores -> . valor
    (27) valores -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO

    print           shift and go to state 27
    echo            shift and go to state 26
    BOOLEANO        shift and go to state 114
    FLOTANTE        shift and go to state 115
    ENTERO          shift and go to state 116
    DOLAR           shift and go to state 25
    CADENA          shift and go to state 21

    sentencias                     shift and go to state 164
    impresionPrint                 shift and go to state 165
    impresionEcho                  shift and go to state 166
    operacionesL                   shift and go to state 109
    operacionesA                   shift and go to state 110
    operacionesC                   shift and go to state 111
    asignacion                     shift and go to state 112
    valores                        shift and go to state 79
    opLog                          shift and go to state 29
    operacionesV                   shift and go to state 28
    variable                       shift and go to state 113
    valor                          shift and go to state 82

state 151

    (80) bucleDoWhile -> do LLAVEIZQ sentencias LLAVEDER while . PARENIZQ retornoBool PARENDER PUNTOYCOMA

    PARENIZQ        shift and go to state 167


state 152

    (81) bucleDoWhile -> do LLAVEIZQ impresionPrint LLAVEDER while . PARENIZQ retornoBool PARENDER PUNTOYCOMA

    PARENIZQ        shift and go to state 168


state 153

    (82) bucleDoWhile -> do LLAVEIZQ impresionEcho LLAVEDER while . PARENIZQ retornoBool PARENDER PUNTOYCOMA

    PARENIZQ        shift and go to state 169


state 154

    (34) asignacion -> variable OPERASIGNACION valor . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 122


state 155

    (89) metodosArray -> rsort PARENIZQ variable PARENDER PUNTOYCOMA .

    $end            reduce using rule 89 (metodosArray -> rsort PARENIZQ variable PARENDER PUNTOYCOMA .)


state 156

    (90) metodosArray -> rsort PARENIZQ crearArreglos PARENDER PUNTOYCOMA .

    $end            reduce using rule 90 (metodosArray -> rsort PARENIZQ crearArreglos PARENDER PUNTOYCOMA .)


state 157

    (91) metodosArray -> count PARENIZQ variable PARENDER PUNTOYCOMA .

    $end            reduce using rule 91 (metodosArray -> count PARENIZQ variable PARENDER PUNTOYCOMA .)


state 158

    (92) metodosArray -> count PARENIZQ crearArreglos PARENDER PUNTOYCOMA .

    $end            reduce using rule 92 (metodosArray -> count PARENIZQ crearArreglos PARENDER PUNTOYCOMA .)


state 159

    (86) crearArreglos -> variable OPERASIGNACION array PARENIZQ rellenoArray PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 170


state 160

    (83) rellenoArray -> valores OPERASIG_ARRAY . valores COMA
    (26) valores -> . valor
    (27) valores -> . variable
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO
    (25) variable -> . DOLAR IDENTIFICADOR

    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85
    BOOLEANO        shift and go to state 86
    DOLAR           shift and go to state 25

    valores                        shift and go to state 171
    valor                          shift and go to state 82
    variable                       shift and go to state 83

state 161

    (85) rellenoArray -> COMA valores . OPERASIG_ARRAY valores COMA rellenoArray

    OPERASIG_ARRAY  shift and go to state 172


state 162

    (87) bucleForEach -> variable IDENTIFICADOR variable LLAVEIZQ sentencias LLAVEDER .

    $end            reduce using rule 87 (bucleForEach -> variable IDENTIFICADOR variable LLAVEIZQ sentencias LLAVEDER .)


state 163

    (88) bucleForEach -> variable IDENTIFICADOR variable OPERASIG_ARRAY variable LLAVEIZQ . sentencias LLAVEDER
    (61) sentencias -> . operacionesL PUNTOYCOMA
    (62) sentencias -> . operacionesA PUNTOYCOMA
    (63) sentencias -> . operacionesC PUNTOYCOMA
    (64) sentencias -> . asignacion
    (65) sentencias -> . sentencias
    (60) operacionesL -> . opLog opLogicos opLog
    (41) operacionesA -> . operacionesV operadoresA operacionesV
    (42) operacionesA -> . operacionesV operadoresA operacionesA
    (53) operacionesC -> . valores operadoresC valores
    (34) asignacion -> . variable OPERASIGNACION valor PUNTOYCOMA
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (28) operacionesV -> . FLOTANTE
    (29) operacionesV -> . ENTERO
    (30) operacionesV -> . variable
    (26) valores -> . valor
    (27) valores -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO

    BOOLEANO        shift and go to state 114
    FLOTANTE        shift and go to state 115
    ENTERO          shift and go to state 116
    DOLAR           shift and go to state 25
    CADENA          shift and go to state 21

    variable                       shift and go to state 113
    sentencias                     shift and go to state 173
    operacionesL                   shift and go to state 109
    operacionesA                   shift and go to state 110
    operacionesC                   shift and go to state 111
    asignacion                     shift and go to state 112
    opLog                          shift and go to state 29
    operacionesV                   shift and go to state 28
    valores                        shift and go to state 79
    valor                          shift and go to state 82

state 164

    (77) condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ sentencias . LLAVEDER
    (65) sentencias -> sentencias .

  ! shift/reduce conflict for LLAVEDER resolved as shift
    LLAVEDER        shift and go to state 174

  ! LLAVEDER        [ reduce using rule 65 (sentencias -> sentencias .) ]


state 165

    (78) condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionPrint . LLAVEDER

    LLAVEDER        shift and go to state 175


state 166

    (79) condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionEcho . LLAVEDER

    LLAVEDER        shift and go to state 176


state 167

    (80) bucleDoWhile -> do LLAVEIZQ sentencias LLAVEDER while PARENIZQ . retornoBool PARENDER PUNTOYCOMA
    (73) retornoBool -> . BOOLEANO
    (74) retornoBool -> . operacionesL
    (75) retornoBool -> . operacionesC
    (60) operacionesL -> . opLog opLogicos opLog
    (53) operacionesC -> . valores operadoresC valores
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (26) valores -> . valor
    (27) valores -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO

    BOOLEANO        shift and go to state 102
    DOLAR           shift and go to state 25
    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85

    retornoBool                    shift and go to state 177
    operacionesL                   shift and go to state 103
    operacionesC                   shift and go to state 104
    opLog                          shift and go to state 29
    valores                        shift and go to state 79
    variable                       shift and go to state 105
    valor                          shift and go to state 82

state 168

    (81) bucleDoWhile -> do LLAVEIZQ impresionPrint LLAVEDER while PARENIZQ . retornoBool PARENDER PUNTOYCOMA
    (73) retornoBool -> . BOOLEANO
    (74) retornoBool -> . operacionesL
    (75) retornoBool -> . operacionesC
    (60) operacionesL -> . opLog opLogicos opLog
    (53) operacionesC -> . valores operadoresC valores
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (26) valores -> . valor
    (27) valores -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO

    BOOLEANO        shift and go to state 102
    DOLAR           shift and go to state 25
    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85

    retornoBool                    shift and go to state 178
    operacionesL                   shift and go to state 103
    operacionesC                   shift and go to state 104
    opLog                          shift and go to state 29
    valores                        shift and go to state 79
    variable                       shift and go to state 105
    valor                          shift and go to state 82

state 169

    (82) bucleDoWhile -> do LLAVEIZQ impresionEcho LLAVEDER while PARENIZQ . retornoBool PARENDER PUNTOYCOMA
    (73) retornoBool -> . BOOLEANO
    (74) retornoBool -> . operacionesL
    (75) retornoBool -> . operacionesC
    (60) operacionesL -> . opLog opLogicos opLog
    (53) operacionesC -> . valores operadoresC valores
    (31) opLog -> . BOOLEANO
    (32) opLog -> . variable
    (26) valores -> . valor
    (27) valores -> . variable
    (25) variable -> . DOLAR IDENTIFICADOR
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO

    BOOLEANO        shift and go to state 102
    DOLAR           shift and go to state 25
    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85

    retornoBool                    shift and go to state 179
    operacionesL                   shift and go to state 103
    operacionesC                   shift and go to state 104
    opLog                          shift and go to state 29
    valores                        shift and go to state 79
    variable                       shift and go to state 105
    valor                          shift and go to state 82

state 170

    (86) crearArreglos -> variable OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA .

    $end            reduce using rule 86 (crearArreglos -> variable OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA .)
    PARENDER        reduce using rule 86 (crearArreglos -> variable OPERASIGNACION array PARENIZQ rellenoArray PARENDER PUNTOYCOMA .)


state 171

    (83) rellenoArray -> valores OPERASIG_ARRAY valores . COMA

    COMA            shift and go to state 180


state 172

    (85) rellenoArray -> COMA valores OPERASIG_ARRAY . valores COMA rellenoArray
    (26) valores -> . valor
    (27) valores -> . variable
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO
    (25) variable -> . DOLAR IDENTIFICADOR

    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85
    BOOLEANO        shift and go to state 86
    DOLAR           shift and go to state 25

    valores                        shift and go to state 181
    valor                          shift and go to state 82
    variable                       shift and go to state 83

state 173

    (88) bucleForEach -> variable IDENTIFICADOR variable OPERASIG_ARRAY variable LLAVEIZQ sentencias . LLAVEDER
    (65) sentencias -> sentencias .

  ! shift/reduce conflict for LLAVEDER resolved as shift
    LLAVEDER        shift and go to state 182

  ! LLAVEDER        [ reduce using rule 65 (sentencias -> sentencias .) ]


state 174

    (77) condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ sentencias LLAVEDER .

    $end            reduce using rule 77 (condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ sentencias LLAVEDER .)


state 175

    (78) condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionPrint LLAVEDER .

    $end            reduce using rule 78 (condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionPrint LLAVEDER .)


state 176

    (79) condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionEcho LLAVEDER .

    $end            reduce using rule 79 (condIf -> if PARENIZQ retornoBool PARENDER LLAVEIZQ impresionEcho LLAVEDER .)


state 177

    (80) bucleDoWhile -> do LLAVEIZQ sentencias LLAVEDER while PARENIZQ retornoBool . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 183


state 178

    (81) bucleDoWhile -> do LLAVEIZQ impresionPrint LLAVEDER while PARENIZQ retornoBool . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 184


state 179

    (82) bucleDoWhile -> do LLAVEIZQ impresionEcho LLAVEDER while PARENIZQ retornoBool . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 185


state 180

    (83) rellenoArray -> valores OPERASIG_ARRAY valores COMA .

    PARENDER        reduce using rule 83 (rellenoArray -> valores OPERASIG_ARRAY valores COMA .)


state 181

    (85) rellenoArray -> COMA valores OPERASIG_ARRAY valores . COMA rellenoArray

    COMA            shift and go to state 186


state 182

    (88) bucleForEach -> variable IDENTIFICADOR variable OPERASIG_ARRAY variable LLAVEIZQ sentencias LLAVEDER .

    $end            reduce using rule 88 (bucleForEach -> variable IDENTIFICADOR variable OPERASIG_ARRAY variable LLAVEIZQ sentencias LLAVEDER .)


state 183

    (80) bucleDoWhile -> do LLAVEIZQ sentencias LLAVEDER while PARENIZQ retornoBool PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 187


state 184

    (81) bucleDoWhile -> do LLAVEIZQ impresionPrint LLAVEDER while PARENIZQ retornoBool PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 188


state 185

    (82) bucleDoWhile -> do LLAVEIZQ impresionEcho LLAVEDER while PARENIZQ retornoBool PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 189


state 186

    (85) rellenoArray -> COMA valores OPERASIG_ARRAY valores COMA . rellenoArray
    (83) rellenoArray -> . valores OPERASIG_ARRAY valores COMA
    (84) rellenoArray -> . valores
    (85) rellenoArray -> . COMA valores OPERASIG_ARRAY valores COMA rellenoArray
    (26) valores -> . valor
    (27) valores -> . variable
    (21) valor -> . CADENA
    (22) valor -> . ENTERO
    (23) valor -> . FLOTANTE
    (24) valor -> . BOOLEANO
    (25) variable -> . DOLAR IDENTIFICADOR

    COMA            shift and go to state 142
    CADENA          shift and go to state 21
    ENTERO          shift and go to state 84
    FLOTANTE        shift and go to state 85
    BOOLEANO        shift and go to state 86
    DOLAR           shift and go to state 25

    valores                        shift and go to state 141
    rellenoArray                   shift and go to state 190
    valor                          shift and go to state 82
    variable                       shift and go to state 83

state 187

    (80) bucleDoWhile -> do LLAVEIZQ sentencias LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA .

    $end            reduce using rule 80 (bucleDoWhile -> do LLAVEIZQ sentencias LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA .)


state 188

    (81) bucleDoWhile -> do LLAVEIZQ impresionPrint LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA .

    $end            reduce using rule 81 (bucleDoWhile -> do LLAVEIZQ impresionPrint LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA .)


state 189

    (82) bucleDoWhile -> do LLAVEIZQ impresionEcho LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA .

    $end            reduce using rule 82 (bucleDoWhile -> do LLAVEIZQ impresionEcho LLAVEDER while PARENIZQ retornoBool PARENDER PUNTOYCOMA .)


state 190

    (85) rellenoArray -> COMA valores OPERASIG_ARRAY valores COMA rellenoArray .

    PARENDER        reduce using rule 85 (rellenoArray -> COMA valores OPERASIG_ARRAY valores COMA rellenoArray .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LLAVEDER in state 106 resolved as shift
WARNING: shift/reduce conflict for LLAVEDER in state 143 resolved as shift
WARNING: shift/reduce conflict for LLAVEDER in state 164 resolved as shift
WARNING: shift/reduce conflict for LLAVEDER in state 173 resolved as shift
WARNING: reduce/reduce conflict in state 2 resolved using rule (codigoFuente -> valor)
WARNING: rejected rule (valores -> valor) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (codigoFuente -> variable)
WARNING: rejected rule (valores -> variable) in state 3
WARNING: reduce/reduce conflict in state 3 resolved using rule (valores -> variable)
WARNING: rejected rule (opLog -> variable) in state 3
WARNING: reduce/reduce conflict in state 7 resolved using rule (codigoFuente -> asignacion)
WARNING: rejected rule (sentencias -> asignacion) in state 7
WARNING: reduce/reduce conflict in state 20 resolved using rule (codigoFuente -> sentencias)
WARNING: rejected rule (sentencias -> sentencias) in state 20
WARNING: reduce/reduce conflict in state 24 resolved using rule (valor -> BOOLEANO)
WARNING: rejected rule (opLog -> BOOLEANO) in state 24
WARNING: reduce/reduce conflict in state 73 resolved using rule (valores -> variable)
WARNING: rejected rule (opLog -> variable) in state 73
WARNING: reduce/reduce conflict in state 92 resolved using rule (valores -> variable)
WARNING: rejected rule (opLog -> variable) in state 92
WARNING: reduce/reduce conflict in state 102 resolved using rule (valor -> BOOLEANO)
WARNING: rejected rule (opLog -> BOOLEANO) in state 102
WARNING: reduce/reduce conflict in state 105 resolved using rule (valores -> variable)
WARNING: rejected rule (opLog -> variable) in state 105
WARNING: reduce/reduce conflict in state 113 resolved using rule (valores -> variable)
WARNING: rejected rule (opLog -> variable) in state 113
WARNING: reduce/reduce conflict in state 114 resolved using rule (valor -> BOOLEANO)
WARNING: rejected rule (opLog -> BOOLEANO) in state 114
WARNING: Rule (sentencias -> sentencias) is never reduced
