Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSAND
    COMBINADO_OPERARIT_DIVISION
    COMBINADO_OPERARIT_EXPONENCIACION
    COMBINADO_OPERARIT_MODULO
    COMBINADO_OPERARIT_MULTIPLICACION
    COMBINADO_OPERARIT_RESTA
    COMBINADO_OPERARIT_SUMA
    COMENTARIO_ABIERTO
    COMENTARIO_CERRADO
    COMENTARIO_UNA_LINEA
    CORCHDER
    CORCHIZQ
    DOSPUNTOS
    FIN
    INICIO
    LLAVEDER
    LLAVEIZQ
    OPERASIG_ARRAY
    OPERCOMBINADO_CAD
    OPERCOMPARACION
    OPERLOGICO_NOT
    OPERLOGICO_OR
    OPERLOGICO_OREXCLUSIVO
    OPERLOGICO_XOR
    OPERLOG_AND
    OPER_DECREMENTO
    OPER_INCREMENTO
    PUNTO
    break
    case
    class
    const
    continue
    default
    do
    echo
    else
    end_switch
    end_while
    extends
    for
    function
    global
    if
    new
    print
    private
    protected
    public
    return
    static
    switch
    while

Grammar

Rule 0     S' -> codigoFuente
Rule 1     codigoFuente -> valor
Rule 2     codigoFuente -> variable
Rule 3     codigoFuente -> impresionEcho
Rule 4     codigoFuente -> impresionPrint
Rule 5     codigoFuente -> valores
Rule 6     codigoFuente -> asignacion
Rule 7     codigoFuente -> operacionesA
Rule 8     valor -> CADENA
Rule 9     valor -> ENTERO
Rule 10    valor -> FLOTANTE
Rule 11    valor -> BOOLEANO
Rule 12    variable -> DOLAR IDENTIFICADOR
Rule 13    valores -> valor COMA valores
Rule 14    valores -> valor
Rule 15    valores -> variable
Rule 16    impresionEcho -> IDENTIFICADOR CADENA PUNTOYCOMA
Rule 17    impresionPrint -> IDENTIFICADOR PARENIZQ valores PARENDER PUNTOYCOMA
Rule 18    asignacion -> variable OPERASIGNACION valor PUNTOYCOMA
Rule 19    operadoresA -> SUMA
Rule 20    operadoresA -> RESTA
Rule 21    operadoresA -> MULTIPLICACION
Rule 22    operadoresA -> DIVISION
Rule 23    operadoresA -> MODULO
Rule 24    operadoresA -> EXPONENCIACION
Rule 25    operacionesA -> valor operadoresA valor

Terminals, with rules where they appear

AMPERSAND            : 
BOOLEANO             : 11
CADENA               : 8 16
COMA                 : 13
COMBINADO_OPERARIT_DIVISION : 
COMBINADO_OPERARIT_EXPONENCIACION : 
COMBINADO_OPERARIT_MODULO : 
COMBINADO_OPERARIT_MULTIPLICACION : 
COMBINADO_OPERARIT_RESTA : 
COMBINADO_OPERARIT_SUMA : 
COMENTARIO_ABIERTO   : 
COMENTARIO_CERRADO   : 
COMENTARIO_UNA_LINEA : 
CORCHDER             : 
CORCHIZQ             : 
DIVISION             : 22
DOLAR                : 12
DOSPUNTOS            : 
ENTERO               : 9
EXPONENCIACION       : 24
FIN                  : 
FLOTANTE             : 10
IDENTIFICADOR        : 12 16 17
INICIO               : 
LLAVEDER             : 
LLAVEIZQ             : 
MODULO               : 23
MULTIPLICACION       : 21
OPERASIGNACION       : 18
OPERASIG_ARRAY       : 
OPERCOMBINADO_CAD    : 
OPERCOMPARACION      : 
OPERLOGICO_NOT       : 
OPERLOGICO_OR        : 
OPERLOGICO_OREXCLUSIVO : 
OPERLOGICO_XOR       : 
OPERLOG_AND          : 
OPER_DECREMENTO      : 
OPER_INCREMENTO      : 
PARENDER             : 17
PARENIZQ             : 17
PUNTO                : 
PUNTOYCOMA           : 16 17 18
RESTA                : 20
SUMA                 : 19
break                : 
case                 : 
class                : 
const                : 
continue             : 
default              : 
do                   : 
echo                 : 
else                 : 
end_switch           : 
end_while            : 
error                : 
extends              : 
for                  : 
function             : 
global               : 
if                   : 
new                  : 
print                : 
private              : 
protected            : 
public               : 
return               : 
static               : 
switch               : 
while                : 

Nonterminals, with rules where they appear

asignacion           : 6
codigoFuente         : 0
impresionEcho        : 3
impresionPrint       : 4
operacionesA         : 7
operadoresA          : 25
valor                : 1 13 14 18 25 25
valores              : 5 13 17
variable             : 2 15 18

Parsing method: LALR

state 0

    (0) S' -> . codigoFuente
    (1) codigoFuente -> . valor
    (2) codigoFuente -> . variable
    (3) codigoFuente -> . impresionEcho
    (4) codigoFuente -> . impresionPrint
    (5) codigoFuente -> . valores
    (6) codigoFuente -> . asignacion
    (7) codigoFuente -> . operacionesA
    (8) valor -> . CADENA
    (9) valor -> . ENTERO
    (10) valor -> . FLOTANTE
    (11) valor -> . BOOLEANO
    (12) variable -> . DOLAR IDENTIFICADOR
    (16) impresionEcho -> . IDENTIFICADOR CADENA PUNTOYCOMA
    (17) impresionPrint -> . IDENTIFICADOR PARENIZQ valores PARENDER PUNTOYCOMA
    (13) valores -> . valor COMA valores
    (14) valores -> . valor
    (15) valores -> . variable
    (18) asignacion -> . variable OPERASIGNACION valor PUNTOYCOMA
    (25) operacionesA -> . valor operadoresA valor

    CADENA          shift and go to state 9
    ENTERO          shift and go to state 10
    FLOTANTE        shift and go to state 11
    BOOLEANO        shift and go to state 12
    DOLAR           shift and go to state 13
    IDENTIFICADOR   shift and go to state 14

    codigoFuente                   shift and go to state 1
    valor                          shift and go to state 2
    variable                       shift and go to state 3
    impresionEcho                  shift and go to state 4
    impresionPrint                 shift and go to state 5
    valores                        shift and go to state 6
    asignacion                     shift and go to state 7
    operacionesA                   shift and go to state 8

state 1

    (0) S' -> codigoFuente .



state 2

    (1) codigoFuente -> valor .
    (13) valores -> valor . COMA valores
    (14) valores -> valor .
    (25) operacionesA -> valor . operadoresA valor
    (19) operadoresA -> . SUMA
    (20) operadoresA -> . RESTA
    (21) operadoresA -> . MULTIPLICACION
    (22) operadoresA -> . DIVISION
    (23) operadoresA -> . MODULO
    (24) operadoresA -> . EXPONENCIACION

  ! reduce/reduce conflict for $end resolved using rule 1 (codigoFuente -> valor .)
    $end            reduce using rule 1 (codigoFuente -> valor .)
    COMA            shift and go to state 15
    SUMA            shift and go to state 17
    RESTA           shift and go to state 18
    MULTIPLICACION  shift and go to state 19
    DIVISION        shift and go to state 20
    MODULO          shift and go to state 21
    EXPONENCIACION  shift and go to state 22

  ! $end            [ reduce using rule 14 (valores -> valor .) ]

    operadoresA                    shift and go to state 16

state 3

    (2) codigoFuente -> variable .
    (15) valores -> variable .
    (18) asignacion -> variable . OPERASIGNACION valor PUNTOYCOMA

  ! reduce/reduce conflict for $end resolved using rule 2 (codigoFuente -> variable .)
    $end            reduce using rule 2 (codigoFuente -> variable .)
    OPERASIGNACION  shift and go to state 23

  ! $end            [ reduce using rule 15 (valores -> variable .) ]


state 4

    (3) codigoFuente -> impresionEcho .

    $end            reduce using rule 3 (codigoFuente -> impresionEcho .)


state 5

    (4) codigoFuente -> impresionPrint .

    $end            reduce using rule 4 (codigoFuente -> impresionPrint .)


state 6

    (5) codigoFuente -> valores .

    $end            reduce using rule 5 (codigoFuente -> valores .)


state 7

    (6) codigoFuente -> asignacion .

    $end            reduce using rule 6 (codigoFuente -> asignacion .)


state 8

    (7) codigoFuente -> operacionesA .

    $end            reduce using rule 7 (codigoFuente -> operacionesA .)


state 9

    (8) valor -> CADENA .

    COMA            reduce using rule 8 (valor -> CADENA .)
    SUMA            reduce using rule 8 (valor -> CADENA .)
    RESTA           reduce using rule 8 (valor -> CADENA .)
    MULTIPLICACION  reduce using rule 8 (valor -> CADENA .)
    DIVISION        reduce using rule 8 (valor -> CADENA .)
    MODULO          reduce using rule 8 (valor -> CADENA .)
    EXPONENCIACION  reduce using rule 8 (valor -> CADENA .)
    $end            reduce using rule 8 (valor -> CADENA .)
    PARENDER        reduce using rule 8 (valor -> CADENA .)
    PUNTOYCOMA      reduce using rule 8 (valor -> CADENA .)


state 10

    (9) valor -> ENTERO .

    COMA            reduce using rule 9 (valor -> ENTERO .)
    SUMA            reduce using rule 9 (valor -> ENTERO .)
    RESTA           reduce using rule 9 (valor -> ENTERO .)
    MULTIPLICACION  reduce using rule 9 (valor -> ENTERO .)
    DIVISION        reduce using rule 9 (valor -> ENTERO .)
    MODULO          reduce using rule 9 (valor -> ENTERO .)
    EXPONENCIACION  reduce using rule 9 (valor -> ENTERO .)
    $end            reduce using rule 9 (valor -> ENTERO .)
    PARENDER        reduce using rule 9 (valor -> ENTERO .)
    PUNTOYCOMA      reduce using rule 9 (valor -> ENTERO .)


state 11

    (10) valor -> FLOTANTE .

    COMA            reduce using rule 10 (valor -> FLOTANTE .)
    SUMA            reduce using rule 10 (valor -> FLOTANTE .)
    RESTA           reduce using rule 10 (valor -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 10 (valor -> FLOTANTE .)
    DIVISION        reduce using rule 10 (valor -> FLOTANTE .)
    MODULO          reduce using rule 10 (valor -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 10 (valor -> FLOTANTE .)
    $end            reduce using rule 10 (valor -> FLOTANTE .)
    PARENDER        reduce using rule 10 (valor -> FLOTANTE .)
    PUNTOYCOMA      reduce using rule 10 (valor -> FLOTANTE .)


state 12

    (11) valor -> BOOLEANO .

    COMA            reduce using rule 11 (valor -> BOOLEANO .)
    SUMA            reduce using rule 11 (valor -> BOOLEANO .)
    RESTA           reduce using rule 11 (valor -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 11 (valor -> BOOLEANO .)
    DIVISION        reduce using rule 11 (valor -> BOOLEANO .)
    MODULO          reduce using rule 11 (valor -> BOOLEANO .)
    EXPONENCIACION  reduce using rule 11 (valor -> BOOLEANO .)
    $end            reduce using rule 11 (valor -> BOOLEANO .)
    PARENDER        reduce using rule 11 (valor -> BOOLEANO .)
    PUNTOYCOMA      reduce using rule 11 (valor -> BOOLEANO .)


state 13

    (12) variable -> DOLAR . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 24


state 14

    (16) impresionEcho -> IDENTIFICADOR . CADENA PUNTOYCOMA
    (17) impresionPrint -> IDENTIFICADOR . PARENIZQ valores PARENDER PUNTOYCOMA

    CADENA          shift and go to state 25
    PARENIZQ        shift and go to state 26


state 15

    (13) valores -> valor COMA . valores
    (13) valores -> . valor COMA valores
    (14) valores -> . valor
    (15) valores -> . variable
    (8) valor -> . CADENA
    (9) valor -> . ENTERO
    (10) valor -> . FLOTANTE
    (11) valor -> . BOOLEANO
    (12) variable -> . DOLAR IDENTIFICADOR

    CADENA          shift and go to state 9
    ENTERO          shift and go to state 10
    FLOTANTE        shift and go to state 11
    BOOLEANO        shift and go to state 12
    DOLAR           shift and go to state 13

    valor                          shift and go to state 27
    valores                        shift and go to state 28
    variable                       shift and go to state 29

state 16

    (25) operacionesA -> valor operadoresA . valor
    (8) valor -> . CADENA
    (9) valor -> . ENTERO
    (10) valor -> . FLOTANTE
    (11) valor -> . BOOLEANO

    CADENA          shift and go to state 9
    ENTERO          shift and go to state 10
    FLOTANTE        shift and go to state 11
    BOOLEANO        shift and go to state 12

    valor                          shift and go to state 30

state 17

    (19) operadoresA -> SUMA .

    CADENA          reduce using rule 19 (operadoresA -> SUMA .)
    ENTERO          reduce using rule 19 (operadoresA -> SUMA .)
    FLOTANTE        reduce using rule 19 (operadoresA -> SUMA .)
    BOOLEANO        reduce using rule 19 (operadoresA -> SUMA .)


state 18

    (20) operadoresA -> RESTA .

    CADENA          reduce using rule 20 (operadoresA -> RESTA .)
    ENTERO          reduce using rule 20 (operadoresA -> RESTA .)
    FLOTANTE        reduce using rule 20 (operadoresA -> RESTA .)
    BOOLEANO        reduce using rule 20 (operadoresA -> RESTA .)


state 19

    (21) operadoresA -> MULTIPLICACION .

    CADENA          reduce using rule 21 (operadoresA -> MULTIPLICACION .)
    ENTERO          reduce using rule 21 (operadoresA -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 21 (operadoresA -> MULTIPLICACION .)
    BOOLEANO        reduce using rule 21 (operadoresA -> MULTIPLICACION .)


state 20

    (22) operadoresA -> DIVISION .

    CADENA          reduce using rule 22 (operadoresA -> DIVISION .)
    ENTERO          reduce using rule 22 (operadoresA -> DIVISION .)
    FLOTANTE        reduce using rule 22 (operadoresA -> DIVISION .)
    BOOLEANO        reduce using rule 22 (operadoresA -> DIVISION .)


state 21

    (23) operadoresA -> MODULO .

    CADENA          reduce using rule 23 (operadoresA -> MODULO .)
    ENTERO          reduce using rule 23 (operadoresA -> MODULO .)
    FLOTANTE        reduce using rule 23 (operadoresA -> MODULO .)
    BOOLEANO        reduce using rule 23 (operadoresA -> MODULO .)


state 22

    (24) operadoresA -> EXPONENCIACION .

    CADENA          reduce using rule 24 (operadoresA -> EXPONENCIACION .)
    ENTERO          reduce using rule 24 (operadoresA -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 24 (operadoresA -> EXPONENCIACION .)
    BOOLEANO        reduce using rule 24 (operadoresA -> EXPONENCIACION .)


state 23

    (18) asignacion -> variable OPERASIGNACION . valor PUNTOYCOMA
    (8) valor -> . CADENA
    (9) valor -> . ENTERO
    (10) valor -> . FLOTANTE
    (11) valor -> . BOOLEANO

    CADENA          shift and go to state 9
    ENTERO          shift and go to state 10
    FLOTANTE        shift and go to state 11
    BOOLEANO        shift and go to state 12

    valor                          shift and go to state 31

state 24

    (12) variable -> DOLAR IDENTIFICADOR .

    OPERASIGNACION  reduce using rule 12 (variable -> DOLAR IDENTIFICADOR .)
    $end            reduce using rule 12 (variable -> DOLAR IDENTIFICADOR .)
    PARENDER        reduce using rule 12 (variable -> DOLAR IDENTIFICADOR .)


state 25

    (16) impresionEcho -> IDENTIFICADOR CADENA . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 32


state 26

    (17) impresionPrint -> IDENTIFICADOR PARENIZQ . valores PARENDER PUNTOYCOMA
    (13) valores -> . valor COMA valores
    (14) valores -> . valor
    (15) valores -> . variable
    (8) valor -> . CADENA
    (9) valor -> . ENTERO
    (10) valor -> . FLOTANTE
    (11) valor -> . BOOLEANO
    (12) variable -> . DOLAR IDENTIFICADOR

    CADENA          shift and go to state 9
    ENTERO          shift and go to state 10
    FLOTANTE        shift and go to state 11
    BOOLEANO        shift and go to state 12
    DOLAR           shift and go to state 13

    valores                        shift and go to state 33
    valor                          shift and go to state 27
    variable                       shift and go to state 29

state 27

    (13) valores -> valor . COMA valores
    (14) valores -> valor .

    COMA            shift and go to state 15
    $end            reduce using rule 14 (valores -> valor .)
    PARENDER        reduce using rule 14 (valores -> valor .)


state 28

    (13) valores -> valor COMA valores .

    $end            reduce using rule 13 (valores -> valor COMA valores .)
    PARENDER        reduce using rule 13 (valores -> valor COMA valores .)


state 29

    (15) valores -> variable .

    $end            reduce using rule 15 (valores -> variable .)
    PARENDER        reduce using rule 15 (valores -> variable .)


state 30

    (25) operacionesA -> valor operadoresA valor .

    $end            reduce using rule 25 (operacionesA -> valor operadoresA valor .)


state 31

    (18) asignacion -> variable OPERASIGNACION valor . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 34


state 32

    (16) impresionEcho -> IDENTIFICADOR CADENA PUNTOYCOMA .

    $end            reduce using rule 16 (impresionEcho -> IDENTIFICADOR CADENA PUNTOYCOMA .)


state 33

    (17) impresionPrint -> IDENTIFICADOR PARENIZQ valores . PARENDER PUNTOYCOMA

    PARENDER        shift and go to state 35


state 34

    (18) asignacion -> variable OPERASIGNACION valor PUNTOYCOMA .

    $end            reduce using rule 18 (asignacion -> variable OPERASIGNACION valor PUNTOYCOMA .)


state 35

    (17) impresionPrint -> IDENTIFICADOR PARENIZQ valores PARENDER . PUNTOYCOMA

    PUNTOYCOMA      shift and go to state 36


state 36

    (17) impresionPrint -> IDENTIFICADOR PARENIZQ valores PARENDER PUNTOYCOMA .

    $end            reduce using rule 17 (impresionPrint -> IDENTIFICADOR PARENIZQ valores PARENDER PUNTOYCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 2 resolved using rule (codigoFuente -> valor)
WARNING: rejected rule (valores -> valor) in state 2
WARNING: reduce/reduce conflict in state 3 resolved using rule (codigoFuente -> variable)
WARNING: rejected rule (valores -> variable) in state 3
