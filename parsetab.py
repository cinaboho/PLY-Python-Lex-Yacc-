
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND BOOLEANO CADENA COMA COMBINADO_OPERARIT_DIVISION COMBINADO_OPERARIT_EXPONENCIACION COMBINADO_OPERARIT_MODULO COMBINADO_OPERARIT_MULTIPLICACION COMBINADO_OPERARIT_RESTA COMBINADO_OPERARIT_SUMA COMENTARIO_ABIERTO COMENTARIO_CERRADO COMENTARIO_UNA_LINEA CORCHDER CORCHIZQ DIVISION DOLAR DOSPUNTOS ENTERO EXPONENCIACION FIN FLOTANTE IDENTIFICADOR INICIO LLAVEDER LLAVEIZQ MODULO MULTIPLICACION OPERASIGNACION OPERASIG_ARRAY OPERCOMBINADO_CAD OPERCOMPARACION OPERLOGICO_NOT OPERLOGICO_OR OPERLOGICO_OREXCLUSIVO OPERLOGICO_XOR OPERLOG_AND OPER_DECREMENTO OPER_INCREMENTO PARENDER PARENIZQ PUNTO PUNTOYCOMA RESTA SUMA break case class const continue default do echo else end_switch end_while extends for function global if new print private protected public return static switch whilecodigoFuente : valorvalor : CADENA\n            | ENTERO\n            | FLOTANTE\n            | BOOLEANO'
    
_lr_action_items = {'CADENA':([0,],[3,]),'ENTERO':([0,],[4,]),'FLOTANTE':([0,],[5,]),'BOOLEANO':([0,],[6,]),'$end':([1,2,3,4,5,6,],[0,-1,-2,-3,-4,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'codigoFuente':([0,],[1,]),'valor':([0,],[2,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> codigoFuente","S'",1,None,None,None),
  ('codigoFuente -> valor','codigoFuente',1,'p_codigoFuente','main.py',9),
  ('valor -> CADENA','valor',1,'p_valor','main.py',12),
  ('valor -> ENTERO','valor',1,'p_valor','main.py',13),
  ('valor -> FLOTANTE','valor',1,'p_valor','main.py',14),
  ('valor -> BOOLEANO','valor',1,'p_valor','main.py',15),
]
